(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    104059,       2084]
NotebookOptionsPosition[    102631,       2042]
NotebookOutlinePosition[    103043,       2060]
CellTagsIndexPosition[    103000,       2057]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[StyleBox["COS457\nGROUP WORK : (30 POINTS)\nNAME: VAN T PHUONG\n\
\tJOHN STUMP\n\tKARRY THEBERGE",
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.684480249533148*^9, 3.684480285919223*^9}, {
   3.687481481673654*^9, 3.687481499542487*^9}, 3.6874834804919777`*^9}],

Cell[TextData[StyleBox["1) Provide the projection matrix that performs an \
orthographic projection on a world space with parameters (near : -2, far : \
-20, left : -5, right : + 5, top = 2, bottom = -2) to a canonical view \
volume.\[NonBreakingSpace] Provide the points that get generated when you use \
this matrix to convert the points of square with verticies\[NonBreakingSpace] \
(-3,-1,-4) (3,-1,-8) (3,1,-8) (-3,1,-4). \[NonBreakingSpace]\
\[NonBreakingSpace]\[NonBreakingSpace] Does your result make sense ? ",
 FontSize->16,
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.684076724218567*^9, 3.684076760581252*^9}, {
   3.684076833479926*^9, 3.684076834884924*^9}, {3.684078724773395*^9, 
   3.684078730500926*^9}, {3.6844803003918867`*^9, 3.684480302039747*^9}, 
   3.684480426735114*^9, {3.684480489465867*^9, 3.684480510969159*^9}, {
   3.684481112154035*^9, 3.6844811295457478`*^9}, {3.6844819176988487`*^9, 
   3.684481924788002*^9}, 3.687481541475263*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3X9wW/Wd739/l+/M8sd2Zpm5zOUW6vy4M/fL/U7vsjvfJkrgtgydJQ79
tbPEYUtnu3ZpYTempawdtoQ4hRJDu9hJGzu3NKZ0rSyNMyVKN3agdrZ2QhyI
DI2c4gQnICdRssiJEkQasVFBSd9fHck653OkI8m2fus8H7Nnl41++OhIOp+P
XufzeX8W3Pftux/4o5qampZro//r7q99547m5q+tWfGn0f9n5UMtq/7+ofu/
cddDq+//+/ubl9x3TfQfV/xfNTVP/981NdH/qREAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEomIqFg
SC5H8vR04ZCcGXfLv3V3yDfqFkhN3Ra5lKenLhntNU0U9jWdG98jP2iql/8+
b35su66uWUYC+XpTAAAAAAAAkgTHZM3ieA5RU9cpUzk9WUh2rlqo5xqJTXve
C3na3eIrxmsKSv/alSl/I/Z3Og7m7a8AAAAAAACoLgys0zOI+fOWyf5QLs8W
kRPuETngdstA14P6817fOiCVO+rFeE19HV/TX9Mtbfvz9Pznpachnjt9tmu/
XJawnHJvl3tr58X+7Yee9/L0dwAAAAAAAMzO7npEzzpuqG2WY3kKcD5wb9Cf
937XO/l50lKbeE5/Td8aPJWXp3xj/XL92E+oN4SDcsofzMvfAAAAAAAAsBQJ
yGt9veJ09srr/nDenvZwuzEv6scTl3N4prCcC8x9ENPvx5/TxyzlshfauKF9
a5fqr+kFbx6OVfCAfL42/ny3dx3KeNerwYBcqtxBVwAAAAAAwDZC4lyxIJZ3
3FTbIO65RiiRqdgcq2trN825lk8iF9LqROdWD+i8dC6LZzgfr10lnjzEQqd3
rNZzpo1H0mdf50fir+G7Y4wfAgBgzsIB+U2fUza0PSVPRbdnupzykseb43Uj
AAAApAgfkQc+MS+3PCY4Jg9PP0e2sTSZqLlQTuuHhUb1mj819T15WIssJNvv
jmdCtfNWiDtNLHS850H9PrnVfgIAwL7Ou7fqY3STt+sdzTLKpRcAAID88e7U
+1p/1jG3+swnt92nP8f3cxgnk69cKPE8ueZUutCYkp2lWdsscjz3fA0AAJsL
eTbrbfhNjhXyzabUNUCvr12btxqLAAAAJRWalF/3dsvzrkP6GmDvunfGxkz/
dHA8dV2wkF9ecXXLmrZtGdaoD8sJz7D8a1eXOJ3d8hNnvxwNxCdSXQmH5MyE
R1y9/XJiem7VheGn9X7WN/e+m/RUATno0sZwt0rXcLp61GHZ2bAgL+Nk8pUL
ndxmrK/2xMi5jPe94PXIS9HjtGF6jPrrvtQXcFXJma5rHbJ8nisT2/X73JyP
LAoAALsJH4mNP144z2Hud4T94lq73JQN3bb1zdLtJwAAQB5M9hlrgNU4tsTm
y7/eaaytrvWJhvShN0EZ6Tbq22hr1A9Z5C9Bz059zEryttThMF1nm5wOnRI1
p7W/96IvUYgnIuOuDXKb8nit9pBap+f4tnWxf19St8T0d7TnSfytO7oOzuqY
5CcXisie5iX6cdrlt76geGliWNYsW5BynLT9jz0mPCmbVjhkfvS13Oow3692
+jX/t0X3yz8ss77P0ul/047bUGDOLwYAAJuItt+rFsba0J9NWF1kCsn2hoVG
36lpB7WGAABAhQrL3vXmMdE1TT2y3/VISkbxvDcsfwiMyprF5n+/1tEuZ5Ke
9fi21Xquscntj/2bmj0lbnuke0AZa2TUnNbqM4/Hdm9Stij9Lj0LMY0FCkl/
c6M0NjWZ5v9r471Xt7RIa2urPNbWJaOB2Q3yzk8uNCXti+ZlHGd+pMc4Vl3D
43LW65ZnVhi5jjbe5/cT22VlXUPK+PW/bGyStW0d0t3tFNfPN0l99D4PNZqz
sb9uaokeh9bYcdigjAUDAADpHXNtkGcGT6W9/QO3ck2NOdsAAKBCvbo+vn76
37W26ONx5k+Pr6lpbJeXXJvly4sd0tC9XyL+PbH7aJnMD1qMfCJ5LtMHbmMu
/kN9an8qrNdL1jKQX/iTdkatOd20Q/5TqR/9lOuQ/D4ypa/rpdXVsZq7dmFg
nf63/2nkvZyOTV5yIWU9eatriYk5ZtrxUNevf6fzLv11fNE5oTwiIjvvNsZp
vWw59mdKnlxkZHb0UwEAKIDAXqONJxcCAAAVamxLqzypXQtT6hTH+jf1nSlj
gMS/V1qaOmNzvi4OGXWAvjWo1gE6LU/eaIyPmUx6ire3GHPTHh9Nym2UmtN3
NLXG9kcbNzSsz70yxt5Yr+sVkX1rl5rnX+XgysTW6b8191zoQ6Ve5Zec5toD
V7xGDaB7XWq9pLC4Vhljfv7Vp7yO6Pv02E3z9Ll0bqs176fzu0z1hwAAleO9
8WFxuVzS39ef86Y9z0ue5AszmIsrSr+lpnFbHtYbBQAAKB21lrG2Zc5UjJo5
yfmLWu/Yau2tRP0gbczRUNJSYepYn8RcMnUN9kROo22f6baqpTwlXcqcrcm0
LyEsp71e8WbYTvn9cqTnnthz3VDbLK/5/OLz+jI+5mwo9Q++3WOsjfb0mNpj
DIrzTuN1HooY/7633cjOHhtMqq8dGjPWvE9zbfLiyPf1x3+jL/349+KIyFuD
rujvkNx/y8R+z/S65HW/VRgGANXrqDKGNB9bTcfs6u3BmjqP7Ot7St3eAgAA
5EZdM+uWtmzrwxtjgq6rbTONK1LXE6tpGkh63Hk9t4nVD0qKUd5oN/q9VuN9
zij7aLn+fNKcrbSxUGjUVIcof/3s5KwqLDuna1am5GA+4xrjX7RpY3oi4h3e
qmc+/9WxSvonUl+juub9DS0Dlq8xkb1pmzo3rTRC0n1nfo9zyjgzAKhy6ljb
fGxW120wWyF9brzWp/GUurkFAADISVgf/5Myb8mKf7c+T+n6VnP2o46PSe53
fugxMo2/cib3SY3xM9r26GDSGvXRfdw9nbHE1j+ziIXUOVtf6J1IvYP+VEdk
zeLFsryuLuN2V51Dz6iy3fdzjgXyt0nzxCQyqednWp0ftR7SSeU4aVsip/ov
datk6/CxtGuaXBwxrk1+uttqTVzzOKTxkvdTjX5zvjbLTBAAqli+cyFz3TrM
hTqG+dHh5D4LUE3CMuU9Jh6PW0bdHnlzwicXSt6/BMoR3xVUutN63Z7k/MKK
Ot/rW0n5jTqexbT+VnBUryFd02QxB1+tOW1VOygyqdfVSbePar954xGrNWVn
JzG3bs71hZR6lFp+ZqRt5qxEy52+3eGU1yayLyD/9pZ7Mucj4bHMx7HoQtL9
qXlz+t1CLgQAccm50BaPT6Z8PvHNafOznnrOlHqHLX2s84kqFZJDvR1px9h/
vWOHnOE3LyB8V1A1lPziT9qy1SmOyKuZajuHj+j5TyzDqV8r23s368/f2D1k
mVWoNZgtr2MqY5SsaymHZWdDfG138xr2c6euRzaXNUbUugPmutIhca6Yy75q
Y6aW6GOmrGpAqdcvby6TeQLv++f628UXq/N0bPBp07mVXAiA3ai5UNo1B1A0
ifnaputfQDWJTOprACf6/E84+2Vfn1PuX2z8u9aP/VWO67wAFY3vCqpISJl/
9a3BbHUTjWtkWn8oVlsoFDCPkfOPyvdWLDT9lv9y2zY5GkjfkZ3aZYxBshrr
c2HAyAYesqqlHDmu51E36tfuwnJ4eGTO+Wyu69QfVcb2/HhCuzobkclxb3Sv
jPFC6fIdzUc+jxw21VgO6nmSVgvbqi96Rln3/kVf/LEf+cfklfHKXXsmuSY6
uRAAu1FzIa1v6c7DtQ/MTWI+d6xuYPZhvkAFivZTG4x+vNbnHDV1vc5Lr7Ju
rnZ76esWAKXAdwXVRe1vxvOLDAJ79XE7t3QMyTnvnthYoOSay8e3xevn1DT2
ZJ2Xpnl1/fKM42cSt8dzlLCc3vW03NOm1DZS1um6NTbeKCSD6++a2WtKI7dc
yFyPciwUlL3Tr2EkZIwX0rbvHDiX8ujz7q2x41xT12OM91fniDVus5wHkMii
tOvJ46KNH9odf3/qeyp23sDvyYUA2By5UHnQ1qW/bbovkrj2AlSbs7seMfW7
nrdaw0Sp/5B+LD9Q3fiuoLqY519l62teHDLP6TGyUWPwilr/WRu3ssWdmnuY
ndfXrLKuHWTOUeY7HClz3tTs4M8bW+TR+nh2++2+d1KebaZyy4WMsT3aMdDq
Umv//fe9b0pyfSEtw/lVbFxQRC543fIvzfHx6R9ztIlp6JQy3+9LyTWuY4zn
1f5mS9tqY5x7BXdfyYUA2B25UBkIHNCvP/3Ew7qYqFJJ9SDSXYfUJNc9e+F0
BXc2gdniu4Jqo8y/mknN6aOdK02f65qmLTKZPJ/Jtzul7tbtTe3yuj/Nd0AZ
62P9nTotTy4yP98/9JrHJyVnB9r22ODcMyH1OeeUCymvKbE9qeyPuq6Y1ba8
bUfKe6G+Ruu62ub8TNuuqWuv6ExIQy4EwO7IhUosfFxf++J7adYei3j3yrPO
ITlL+QhUMHVtmXRj2nX+PfocAm3747b9xdtRoMT4rqDqTNd7rnXUSYvzYNY1
NY523qXP5+oaTLfObUh+eaf1GlQPdu9PyX0S9WNucqyQTSMW/a2wkbFodaz3
elM7xGrd6th9fLl3mnPKhZQxg39U3yYHUjKxsBxoX5lyfO5obJM9adYlOzld
Oyh9zdGw7G4wcqHVzv1lsB5Z7siFANgduVApndZriq4ZTFeDcSo27lkbP52u
ZwSUP2MOQeJck3ltlPPStcjo7/P5h33wXUE1CsfWrJ3p5a2rQa8c8hyTS2ke
EHBv1zOch7p6ZVfX6pTso6YpueZQWPy+QMZ9ODvhkd96MxV4jMgJj0fe8uUv
M8i17vQFr0feyLjPIhd9x8QT3e83J7xyLpRpYI+2DtzyrOMUE+/PhQofI6Qi
FwJgd+RCpXJeepSaol9tbZVHmlpkdYuxPdLSNIs1XYEyllQHRRtznnkeQUT2
NC8x9dFesKqvAlQbvitABkEZXL9SH8+yY8LotH4YGJctDebvwld6c5vjVQyJ
OknXODrntE59fhk5s3nN++pHLgTA7siFSiEo/Un9+GxbxnkEQJm7MrHVfB23
cVvW66JvK2vvatv9Nuujwp74rgDpROTV9Uv1z7n1+l8RGdvyoPH9qe8p+zlO
Ed8B2dzRIT90ps59K7rggdj1SG3+3ss2WxeXXAiA3ZELFZ9V3cJMW2zdepon
VLC3e+4zfaY/3W21xolZcr3MW6ibAhvguwKkodT/0dbBGkrbXw2Jc3rdsZq6
chiDUzkStc1qmnaUPqMqMnIhAHZHLgSg0JLXTLq961DWxyT30ejfww74rgBp
hMy50LPjaX63Ryb1dcXuz2H9eHuIiN/nn67jFIzVs9SO2/M2nItKLgTA7siF
ABRa8m/dLzqzV8ZN+a1bP7eanEAl4bsCpDMl7YvM6499s7tffuvzy3uhkLzv
98lv+rr1+lzL2gZsN+Zlto52xms1afPG7qmP1zd4wGXPyvXkQgDsjlwIQGFp
NSGWm/pbG49kP9GkjoHgty6qHd8VIKPgEdm0wpFx7v1f1DfLTo+v1HtaAYLS
/SlzzvaPruzzVqsVuRAAuyMXAlBYQb3Ww2z6W/zWhf3wXQFm4qJvXPb19cpz
XV3SFd22dPfKr0Y8cjJAJ3Y2fuc9ID/t6JAfOV1y2G+/uWMqciEAdleOudB7
Fy7IhfPn2Wy4Xb16tdQfP+RdRPYlrb/HGAjACt8V5EtEgsFgwbf3QpGse/L+
+++XvG/BVprtww8/LMJnPT/IhQDYXTnmQv/zf/w/GccIs1Xv5vf7S/3xQwEk
r7E0k3W0qZkCO+K7gtxFZN/apXlvn622mo6DWffmS5/7fMn7Fmyl2fa/8koR
Pu/5QS4EwO7IhdjKaSMXqk6ssQTMDN8V5C61bkyhNnIhtkwbuRAAVI5yzIU+
+ugjNptuf/jDH0r98UMBJP/W/XR39tqWIc9m02Oubx2Q7DMWgMrGdwW5i8hb
gy5xufqlv69wm8vlkpc82a/lRCKRkvct2OjTZUMuBMDuyjEXAlBdUsYzNO3I
un5w8u/jr/Tac+1c2AvfFQAoPnIhAHZXvblQRELBkFzO10XTcEjOjLvl37o7
5Bt1C6qirucHAZ+8MeySH7Y0FqwNPDe+R37QVK9/xq6ra5aRAFeybSc8Jg98
wpjXkH2eS0ReXWter/v5iWy/joEqwHcFsECfLivtNU0U9jVVc5+OXAiA3VVl
LhQckzWLjT71VE5PFpKdqxamzJmu5PoNVya2W84Dz28bGJT+tSst/85M6hGg
2oRk+93zTeea/RnPNUHpVtbr/njtKhmvjq4nkAXfFcCEPl0WxXhN1d+nIxcC
YHfVmAtdGFinv6b585Zl6VNnE5ET7hE54HbLQNeDVVG/4WrQKweGR+SNkZ36
dWntOL0cyNdfOC89DfE+yme79stlCcsp93a5tzb+t37oeS9ffwgV5PSO1eY+
lzvD5yC4Vz5fa9z3hpaB4u0oUGJ8VwADfbpsjNfU12H06W9p25+n57dHn45c
CIDdVWMudHbXI0YfubZZjuWpsf/AvUF/3pmsHVz+wvp16Y852mQyT8/6xvrl
+rE3VbkIB+WUn3bWtkKjej8ydo2xpS9tP/zMtgdN/bNnxyt+hD8wc3xXAB19
ulmYMLKNbw2eystT2qVPRy4EwO6qMReSSEBe6+sVp7NXXveH8/a0h9uNMbQ/
zql+Q1jOBcrgQPv3yG2J3x1N6X93zErwgH7tOtv6yleDAblUuRfoMAcne+7T
v0ML5zlkl+VSNpPy2E3Kb+IZ1N0Fqg3fFWAafboZisi+tUv11/SCNw/HykZ9
OnIhAHZXlblQQYTEuWJB7DjdVNsg7rk2t5Gp2Hjca2s3lXwu+8UR41rZF535
Wb9Gnf+w8Uj6D9P5kXj7+13aXZs5L53LjH7XNXXtMmnqR4Zl7/rlpnPSCB8R
2BLfFaBwqq9Pp54ztDpjnjzEQnbq05ELAbA7cqEZCh/Ra/FoazzMqf0PjsnD
08+R7bpLMRztXDmj9n7mjHqpmT5Lx3se1O+TW50AVCTlexDrvzoa5IXBYXl1
ZFCeaVhiGiPxM+bEwM74rgCFUYV9OnX+aU19Tx7WIrNXn45cCIDdkQvNkHen
fpz+rGNutfxObruvjNobc3ufl7Y8NKb0s9KsgxE5nntfDJUvMiW7Osx1UdTt
M02dMlola98COeG7AuRf1fXpzLlGXnIqm/XpyIUA2F1F5EKhSfl1b7c87zqk
18B5171TNrQ9JT8dHE+tixPyyyuublnTti3DeqZhOeEZln/t6hKns1t+4uyX
o4H4oNsr4ZCcmfCIq7dfTkyPw70w/LR+nL65992kpwrIQZczuj+t0jWcrnZh
WHY2LCifayrRtjxxnesaR/Z1Xy94PfJS9Dhpx/yZLqe87kt9AVeVNvW61iHL
57kysV2/z83lcH0NJXUlFJCj7mHp7+uPbQPDbnm7LOo0AOWF7wqqBn26gjip
1KB/YuRcxvvSp0tFLgTA7so9F5rsM2rg1Di2xGpqvt5p7LM2fn5IP3UHZaTb
mAutrWc6ZPF6gh5jffbkbanDof/39bVr9XoOifqE2t970ZeYtB2RcdcGvXZz
Yp66Oqf7+Lb4+qpL6paY/o72PIm/dUfXwcIdwHR8O7O295pLE8OyZtmClOMU
r4MaPTjhSdm0wiHzo6/lVof5frXTr/m/Lbpf/mGZ9X2WTv+bdtyGAkV8/QAA
oKjo0xVKRPY0L9GPU6x/ZoE+XXrkQgDsrnxzIa2m5krTObqmqUf2ux5Jac+e
94blD4FRWbPY/O/XOtrlTNKzHt+2Wm8DN7njC7yo/ZTEbY90DyjXpYz6hFot
v/HY7k3KloaFKftivm4Ukv7mRmlsatLXc4j1MxwrZHVLi7S2tspjbV0lmQOg
Xiv7Rp/1WqZHeoxj1TU8Lme9bnlmhdEH0K4N/X5iu6ysa5BvNpnfq79sbJK1
bR3S3e0U1883SX30Pg81mvtRf93UEj0OrbHjsEG5bggAAKoJfbrCmpL2RfP0
/OuYxS7Qp8uMXAiA3ZVrLvTq+vham3/X2qJfu5k/fS2mprFdXnJtli8vdkhD
936JTK+3ru3/D1qMtix5HMwH7s36bQ+ZspCwXmtHay9/kbwesFqfsGmH/KdS
a/CpaNv3+8iUvgaENgfbapzzhYF1+t/+p5H38n24Zu1w+12mPliyxHhk7Xio
a52+02k8zryGWUR23m1c03vZ8jrRlDy5yOjfVfI8dAAAMDP06QpMWU9ee02X
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
kZb4fOh7Ovr0eXGvrjfGwH6ywzxG53CnkSmpuYs6/0vbUutFT8mTi+K3aTWN
0rWRWd+XOezD2V2PxMcbtbSY2ulL0fv3N8fzquVtO+TdkF+cK+KPv8bRGd3H
sOxZu1S//T/CYf3YlMtvD3IhAHZHLgSgrCj1GsiFAKCcRWTf9O99LVvY5U+e
zRWU7Xcb43084aSbw0f0OUdWfdAPlVp097pSa/Sc3Pagkk90zqq9uDKxNf64
+jnmQpHjsTnRC5Q5XQ+7zHWx1T62Ol7oQ4+RQXzJYo21kz33pWQyOv8euS1t
VqbvXJb3ZW77cGF4s6zq1v77tDx2U/x9+59N7fJs612x/35mOHHNJ6S/79rt
29osbp/O1G6obZbxMqglSC4EwO7IhQCUkyvenUY/v3FbDuvEAAAKa0q6FsXz
AW2tgMmk3/fq+E+r7EHLjbrvTN8HfXt6npa2WdWgSWQ75nloYTnt9Yo3w3bK
75cjPffoucRrPr/4vL6MjzkbSnpxvt16PqNtf2VRh+dtJVt5eizRmp3XX7NW
DyglKxNz3aLkXOjiyPf12xI1jVJlfl9y3Qd1nFdi+4H7XNpjk3K7Moaspqlv
1rWhCoFcCIDdkQsBKCfq74iv70k/3wwAUGLBA8b4zqYdSb/vw7J7ei6SNmbl
F1MWv/5DY3o+kLpmVvb1tE72PJiaXYRGTbV18rXVdJizkQvDRp0d6zFHEdnT
bNQCen56ntYVr5Gp3NAyYJmJHFXysORM5nC7sX6nee6XIuP7kvs+nN5hrqP0
7T7zWK6pXesy3q5mTvdbjAMrBXIhAHZHLgSgfIQyzzkAAJQNdZ7XF3rNc6jU
OWJp53iFx0z3mVJvi0zqc5VSbpumjif65t539b+7ZvFiWV5Xl3G7q86hZ1bZ
7vs5xwL526TxTofb79L/9g89FiNblf3X6gAl9l8dQ/T4qHXdH7Vv/vioMs5G
guK802gjx9O0kRnfl5z3wZx3Xd+anCsZc9hiuVNr6nigGWVbRUYuBMDuyIXK
QVimvMfE43HLqNsjb0745EJ5NJNAUalzAlLXbgHsjHYC5UftQybP8zLN8arv
sZwTrP4WT8kXlDo6qdmDZkrap+dKxa4jzLL/ejVRd3pO9YWCel3ldPVx1Ndv
zKELmeo5W6/PblwfSakNpOZoaY6pJtP7kvM+yGl58sZ5GV678b5Yz1Ez5rBp
jz9WDpPIhFwIAMiFSikkh3o70o53/nrHDjlDvx+2YfQla1rKo94AUHq0EyhX
med5qb+ztXxg0uIZ3lDG3Dwxcs50mzrXyKrmtFo3+YvO1DEx2ajrkc16fQN1
LFSafCYxZkZbq+zlQOJfQ3qepG3Ld1pc/1DmgKnjjDRq1nRzyjpl+s5lmX+X
2z6oeV3yGmsxgb2Z62InzXG7nHqPkiAXAmB35EIlEpk0ra+qXY95wtkv+/qc
cv/i+ab35FcW60gA1SYxrlyrkVku1w+BkqKdQDmbXo9L+wzeqGf5YTk8PBLL
KtXf2ZZjcpTHW80TU+eIPTue/GhjvM5c24xc1qk3jYVq3Z96h7TZiTEOR9uM
WtQGdY215KzszPRt2rngRV88EP7IPyavjPuNO2V5X3Ldh4tDRl0lqzlo6u3f
GkzNnC6OGDUEv9JbHrWFNORCAOyOXKgUjPU5E+NoR03Nz3npXbXEdHu6OeRA
NUj0E7Vz0FAg+/2B6kc7gTKn1Iy+NTZeJySD6+Pjf348cdlU4+ZjjjY5k/Rw
tcZNau5jHvOS3Dc93mPkI3OtT5NLLqRmCJ/uTl5nzfjuXlfbljROyqgPZJmb
qOOQGlPHISVqQWvjr8ZFy6d2x8beaGOW9HE3Wd6XXPchUVfJPA7K8Mb65fp7
Y1VrXL39RV9IfIMb5G9aB0o+bohcCIDdkQsV39ldj5januet+jRKu5x2LC5Q
BbR16W+b7mMmrn8Cdkc7gXKn/o7+88YWebQ+noXoa08p84W0TV2nPHHe1/79
M90W86HS1GzWHHOt03OJn0/MvdOar1xIq32k7Li83vm1jNc51HrV2jgq47WF
9XrOWu4zkhJLmGv+tLStNsZLKaeHrO9LTvsQ1GsDaX93MiX2OS9di4zaQ6nj
uMxz2BLbn7ZZr4lWTORCAOyOXKjIov34h5V+fE3jtrTXSNT3RtteOM1vZlSZ
wAH9uuZPPNZrogC2QzuBCpD8O1rbHhtU5wWZ16XSsoyNfSPyimuDngn9gzNN
jRxlHpa2/a/GNnH19coTjfHM4mN1a2U0kFuSkEsudDXptX+uzSl7ovu3ZtmC
7PuX9NpubuqUA+5h2dQUf23XO5rTPDY1U7mmrt2UCamvK/37ksM+KGORLI+b
WjvIqu5SZFKvWZ3YmnsPlTwT0pALAbA7cqHiujCwztTufOfAufR3Tmq3/7jN
Yg47UKnCx/Xrwd9Ls/ZYxLtXnnUOydly6DQCRUI7gUpwxbtd/9xdW79W9vqs
OpDnpbd5aUpOoeU8e73pO5wfuDekPCYxRmiD61Be5hzlkgtpGU2/slZ7Yvu4
o0E2D45n3b/3PVtN39tEbvbd3pEM+xKW3co6Yqud+y3vO7P3ZW77kDhmNzlW
SOfwqZTbE3MHtds3jVi06+ExPTf6s/q2tPtWCuRCAOyOXKiYwqa1Qa3XiVAZ
43ETY3Jnv+IGUI5O6/V01wym9i3jpmLj1fncw15oJ1ApInLC45G3fNl/P1/w
jsuo2y2Hxo/Ju8HsY9qOKjWnW/s8cnzcI29O+PJagya3XCjug4BPjkSPwaHx
cTnln2WOEA5EH+sWd/TxE17/jF7b1aBXDnmOyYWMh3Dm78vs9yEkfl8g/fie
SEh8vkxFAiNyJvpe/tZbfoUEyYUA2B25UBEl1YLQxv8mr79hFtHneetzBOZY
XxEoH+elR6mn+9XWVnmkqUVWtxjbIy1N+jXFP2mjZgpshHYCtmfUbY71Swv0
cU6MbbnG0Tn7depRdciFANgduVDxqOuaJmpGZLtGpa7Tqm33u8pnTU9g9oKW
Y+8zbRnn0ABVhnYCtqfUnNbWry9UZhPxHZDNHR3yQ+f+kq+FhdIjFwJgd+RC
xaOuyaptqWubpkqs353YbqF2BCqYVT3MTFtsPRe6ZrAR2gnYnlIzS1tjj/Jy
KAZyIQB2Ry5UPMnrxtzelWYdDkVyO1XIa2cAgNKinYDdfTDytP5ZfnpsrpV/
gNkhFwJgd+RCxZPc3/+iM3t10JT+fv3c6yMCAMob7QRsLTQpW5S12Ova+uSU
PyDBYIhxQygociEAdkcuVCwReXX9clObs/FI9oOdeh2Y/j4AVCfaCdhU+Lg8
uSj9nGJt/fQh+qcoIHIhAHZHLlQsQXHeOX/WbQ79fQCwC9oJ2FRkSl5y9sqO
vn4ZGB6WA7E17cflmNcrPp9f3g0EGS+EgiIXAmB3v3n8DuV6zCLppShBgURk
X9I6TFwHBgAYaCeQTkSCwWDBt/dCpC+wp8uvPG46j371ZX+pdwkAiuroj+r0
c+CCeZ+Vf/+g1HtUvZLXmZnJWsLUjahsz/zgn2X5X97JxpbXTftcoTrRTiBV
RPatXTqjNRxz3Wo6Dmbdm5d27y75OZCt+raGv/1qEb5L6X3o6TJ9F74z+l5J
9wcAio15ZMXDOjP20/LwPxalL89mr037XKE60U4gVVC6PzWvKOeWmeRC2174
ecnPgWzVt93+v/93Eb5L6TGPDIDdkQsVT3J//9Pdb2Z9TMiz2fSY61sHmGNf
QY5NTMj+V15hY8vrpn2uUJ1oJ5AqIm8NusTl6pf+vsJtLpdLXvJknzvj9/tL
fg5kq77t9dHRInyX0iMXAmB35ELFk3JNt2mHXM7ymOTfCF/p5fcgAFQr2gkA
KD5yIQB2Ry5UROExeeATxljw7GP9I/LqWvOaxc9PZPuFAJSriLzv98prfb3y
g5bG2Od5JjV1AVuhnQAqCO1atSAXAmB35ELFFJLtd883He/9GY93ULqVNYs/
XrtKxpkcgAp0YsfqlFoC2ud/hG4XkIR2AqgEtGvVhVwIgN2RCxXX6aR+xPfd
GdY7CO6Vz9ca972hZaB4Owrk0e+8HhkaccvBvs1ym/L71RMu9Z4B5Yd2Aih/
tGvVhVwIgN2RCxVZaFTurVXmCLT0pa0Pembbg6Y26tlxVh5GhQuP6Z//mvoe
1tIGrNBOAJWDdq0qkAsBsDtyoeI72XOffswXznPILsvlPyblsZuU3wUzqD2K
ynI1GJBLNpvvofa7PtOdff3tfJvZMQ/LuQAnQpQW7QQqk/3On7Rr1YFcCIDd
kQuVwnnpXGa0PdfUtcukqU0Py971y03vC/PVq8v5kXj/47s263eov3Uzzo0p
gBkd88iU9DQslGtrN2Wp9QsUGu0EKoxNz5+0a9WBXAiA3ZELlUhwTB5W1pz5
uKNBXhgclldHBuWZhiWm68Q/Y15AVTne8+AM68nOzaXxnfK1Zc1lWOMgLLtX
LYy99vnzlslQEbtcMzrmynfy9q7iX/MFUtBOoFIU/PwZlMH1X5O/db5ZgOfO
Be1atSAXAmB35EIlFJmSXR3m2hDq9pmmThkN2GyiUbWLHNfXoK6p25L3a3dT
g0+X8ZpEp+XJG+Ov/VpHu5wp1p+d4TE/ue0++oMoP7QTqAAFPX9GJvWxc190
TuT3uXNGu1YtyIUA2B25UOldCQXkqHtY+vv6Y9vAsFveZh54VboysV3/vt08
g2t3Hwa8ss/llM5up/y0o0N+7BqRs2l/Ap421Rr5katXNkcf0xHdOru75RfD
ntLWwwwY6yZd3zpgqqN7weuRXzq75am2p+S54XcyPs3sjslMj3lYdjYsmPE4
rtnug7b2+FuDvbK2tUuOpDx39LZhl2xoa5WNvQct6sOE5Z2R/uh7+ZQ80T3A
PACbop1A+Srs+fO9Xcb6fDVNndG2oivWrrV3dclPnC553VfC70Ge2jXtGJ7w
DMvWrm5xRh/T3tEt+yYCae9diHZttvtQbe0auRAAuyMXAgosOCaPLnPIfIdD
bnUsMPU7lk7/2021DTKkdr9Ck7Ktud5yfIA2Fmg0qbui9T9fzDCmQH3sSInG
Fnzg3qzvxzf6TsX+7XfevfK9FQtT9vPHExbVc2dzTGZ4zH++ZV3s35bULTHd
R5uXo91P++87ug7ObR+mXZrYrV/X1bZnJ4yTbMCz03SbNg9B7btfGt8tDy82
/52NqR1wACi649sKfP4MB+S3w72yZtkCy8eo2985D6Zds6+Qcm7Xok4NP2da
f1DdvupUMp9CtWuz2Ydp1diukQsBsDtyIaCwfj+xXVbWNchDjeY+2l83tcjq
llZpbW2VDa5Dep824tujX39c0rpNTgbDctl3wNSP0tcd8u9N6V9pW2P3kJzy
+8Xv98p+5zrTbYWYvzYTR7fco/dNX5wKyYltqy37oNr26PC7psfO6pjIzI75
RtcB2dXcKI1NTfpza9tNjhXR+7TE7vNYW5c+R2e2+6CZ7Hva9Pdj59hY3aew
HOj8WsrrNq7pRmRsi3XOxzrkAEovJP0FO39G5PXO1POflh39+7hX/IGAnBgf
Tsleil3zWZNLu6bWjteyE6fbJ+FISF5POve/4I0XCyxEuzbbfdBUa7tGLgTA
7siFgGKZkicXxb9rWh0Cy2wmOKpfs7uxpc+UMajjxvXvavT+65ra5OXxcdne
sFDvn/5b0tDvi0NGP67YtTHjQvr+aX//kZaVsf++p6NPnz/wqrK20ic7lGuZ
sz0mJjM45lEXBozs7J9GLH5bzGEfzu56JPZvd0T74momdynad+5vjvfrl7ft
kHdDfnGuiF/7vcbRGd3HsOxZu1S//T/CYf3YcI4GUG4Kcf480rNOHukekLfc
xm/161qHkp54yrRm3y1t+wv1EtPIoV2LOtxpZEpq7qLO/9K21HrReWrX5rAP
1dyukQsBsDtyIaBI/HvktrT9W01Qtt9tXBdNWU8sfEQfm536XQ1J953xx95Q
25xaczpy3LSu0eOjRb6uOv33Fyhj3x92meuHquci47pqLsdEZnDMYzsn+6b7
q1rfeJc/+eDNbR8uDG+WVd1aX9qo+/Q/m9rl2da7Yv/9zPCp6ScI6c+v3b6t
zeL26d8elu8tAJRMYc6fCR96jHla97pSa/Sc3GaMP6mp6yzuWNg5t2va6zIy
iC9ZrLF2sseoF52SC+WlXZvbPlRzu0YuBMDuyIWA4rg48n39u5aoQ6D6wL0h
Yx9N618nsp+U72p4TL8eW1PfY1FfOqz30bTtedN1wZCc9nrFm6ftbNiig+fb
rfdjte2vLOoVvK30QZ8eu5T7MZnBMY+bkq5F8WN3fe1amUza/Vz3Qb0enth+
4D6X9tik3K5ca69p6itJDQ0AsFbY8+fb0/O0tM2qBs2Via1GLpQ0j/fDgC9v
7do7vkDquXeO7ZrIef01a/WAUrIyMdctSs6F8tGu5boP1diukQsBsDtyIaA4
Drev1L9r5vHamrDsnh6zrV3b+8WURS8pZGQ/yWuLqH3j1DHnErsm+3Caa7In
e+5J6d/lsv2TxVikC8PGPLaa+i0WuVVE9jQbNRPiuVVuxyT7MZ8WPKDXYdB+
V5j/Su77cHqHud7Et/vM17yndq3LeLvaN7/f4no5AJRMQc+f2dfTOtljjBcy
tX3RNi9dHeW5bB+rTZ2vNbd2Ldpee41M5YaWActM5KiShyW36bm3a7nvQzW2
a+RCAOyOXAgohqA47zTG0o9nGEufdix8eMx0nynlJrWP9sTIOcvHJvrIH3O0
yRnlJq1OZq2jTpbX5b4tdjTIryzWOzvcfpe+fz/0WNSXjEzqY9K1eglTeTgm
WY/5NHWewhd6zXMAct8H8++C5HWM1bH+sf55a+p10xn9BgCAEijo+VNpF1LP
rXHqeKJv7lXqOkf/9prFi/PSrn3O4ZD6jv0W5+Y5tGtiHkOUbk632jd/fFRt
0/PQruW8D9XZrpELAaVx0XdM9vW5pLu7Szq7u6P/1ynbevvl1+5xeTeY7vwQ
H/N4bV2bjAXzN+JQW09Su44er5tmP+RCQBGofV+LeV6msfCW88DMfRZzPyyi
129MV0dAva5pPZa/kIJ6/cl0dQTU15/Yv9yOiWQ95gnqOTB5nkLO+yCn5ckb
52V47VPSPj3W33os/3lT3ahj5TDYHgCmFfT8qdTRST23aozzZ6x2UVH7r3Nr
17R522o9Z+v12Y3aPClteh7atZz3oUrbNXIhoLjede+Uby9bYPreWW2L6hpN
6zbHKGNNtW2pwyG31i6Ona8ybfMd6f/9VqVWnPUY0OpHLgQUnto/vNlinpfa
H9H6UZMWz/GGcm3SPCYoWx8rpPdfLet+Fpp6zThNPzZxbVFb0+Xl6bXUcjsm
2Y/59M5lnKeQ6z6ov2uS16KJCezNXD80aS7A5dR7AECJFPb8qc41sqo5rdZN
/qIzdUxMQc2xXVPbY21bvjN57XoxnffVcUaafLRrue5DtbZr5EJAkUSmZFvz
ctP3LXa+ctTJPfV1ltlQynlIycgLsZELkQsBhXJmes0ULZN+0RcPZj7yj8kr
4/7Yf6v9EctzkbKeWMp4eiUzr2lM7Z+q48nT16gsHNM141aLdYTT9DFzOiaS
/ZgnP4e2fnI8UgvL4eERORPOfR8uDhnjtKzG6qu3f2swtW9+ccSo2fqV3vKo
wQAAMQU+f6pzxJ4dT360MV5Hq6tc7DEnc23X1HE42mbUojaoa6wlZ2X5aNdy
3YdqbdfIhYBiOK2PJ1Tzh16Peg4Lyqhzdcp99iett5OcC93kWCHNrR2yxdkr
/X2D8u+uzXoGrW5aVv+zwUHZ09cvLlevPNfVIQ/VLzHdJ7nmhl2QCwGFl6jf
qF0zHRetT7k7dq7SrjNq18rU7MbqXKTWAkjuH2esOR0aM/UPS3FdTu1rfbo7
eQ6bsVbtdbVtpuvJuRwTTbZjHv/zRqZ2a+x6c0gG18evX/944nLO+5CoP2G+
Xmx4Q5n/Z1WTVb39RV9IfIMb5G9aB8rm+ioAGyvo+dM85iW5b3q8x8hHSlGf
Zq7tmlofyDI3UcchWVznyUe7lus+VGu7Ri4EFN7hTvNaN+nOI5qLI5tN9zPN
Zw2NmuaRre2zGDMaOWI5psh0vlScd2/V8/x0ax1Uu988fod+nBbOWyTbLQsD
Apg78zz9lrbVxjXORHdWGVetbep6rle8O/Xz1Ge6U8eNqzWnvzOsXNcLHZEn
F8X//cbWHSUbD5lcP8IQkdc7v6aff4eS24UcjsmMjnnSvv15Y4s8Wh/vy+tr
p+S0D8b6y+nWCU6sI5xt/p+6/Wmb9doxAFBMBT1/pqnZrDnmWqf/Tvj5RGk6
7nNu18Rcr1obR2W8trBez1nLfUZSYok8tWs57UP1tmuXX3nctE9f3e3P/iAA
M6eMo0xsf9xmMd5ScbTTqFGvjm1U5xH/SZvFfFVNmrlmmWpKJ3Jru46VOfoj
Yx7fgnmflT0flHqPgGqT2g+6pq7d1I9LXr9D6/Nt7BuRV1wb9HPoPzitsoeI
vLp2uelxTzhd8ovudfrjmnsPlbS/dTXpGtzn2pyyp69X1kzXmvtY3VoZtVjD
bO7HRDOTY556fVDbHhtUx7XnsA/q/D6rNkitsWBVnyL6uyhR2/O/l8l7CQAJ
BT1/Jv1++F+NbeKKthtPNC7J0m4Ux9zbNUl5bTc3dcoB97Bsaoq/tusdzWke
m692LYd9qOJ27UNPl2m/vpNmnTYAc3Oy58GUc5N5rUMLyjlHXTdHPc/9qy/N
GWQOuVBiDoaWi7vLY6nEomIeGVBoYdmtrP2x2rk/zfnovPQ2L005f2n94b3e
dF9Mo+Z08vaZaD/vdX85nNRC0t+8JGX/Pu5okM2D41nGjs/lmGhmdsyveLfr
97m2fq3s9Vk959z2IdFmafOdO4dT6zol5lhot28asaj7GW3PEv3rP6tvS7Nv
AFAahTx/fuDeYNmuaWOEtHVpSj3nKLd2TeR9z9aU6+Zabvbd3pEMY3vz2a7N
bR+quV1jHhlQWGrmkNi+0Jt9zYBXp68v1HQY1xES5xptrm7aOkBzyIXUuWfP
l2COcqmRCwGFdzXolUOeY3JhBqeYC95xGXW75dD4MXk3mOUBSo5+bV2bHJo4
Jh7PuJzM9rgS+CDgkyMeT/R1jcsp/+z6W7M6JtNmdswjciK6T2/5su/P7Pch
JH5fIP110EhIfL40k6qn9+3MuEd+6810HwAolcKdP48qNadb+zxyPHoufHPC
VwZ5kFku7ZqEA9HHusUdffyE1z+j15bvdm32+1C97Rq5EFBI5nr3iU2rPWe1
VqXqatAXO/9fUs57H/kPyOaODvnpYIZcaS65kITlUG+3/MTpktcD5fdbqtDI
hYDKpdacTq19CQBApTHqNsf6pfbrmqMEyIWAQrKuLRYbB9qyTQpS3nhOuZC9
kQsBlUutOW21XiwAABVFqTmtrV/PcigoBnIhoLCS1yIzjRuqSz/ndc7IhWaN
XAioVEbNaa0mgGn9RgAAKpFSE/m61qGyqEmM6kcuBBTWxaGn0+ZCie2LLZ2y
byJP80zJhWaNXAioVMZ6sJzjAADV4IMR47eDui4xUEjkQkCBKWNBs23X1TXL
drc3t+sC5EKzRi4EVCbf8GbTd/eXHq8EAkG5FObqKgCgAoUmZYtSg6KurU9O
+QMSDIYYN4SCIhcCCi/keW5GuVBi09ZUPDDXtZWLmguFxNW8XBx1dbKyvr7g
29/UOeTWpm15fx3kQkBlObFjXcZzaE3bwVLvIgAAMxc+Lk8uSt+uaXOlh+if
ooDIhYDiOKHURp3p9iP3udn/oSLnQunqahdqK8TrIBcCKkvA3S89vS7pGxyU
oZGR2Pqyb04cE6/XJ36/X94LcVUVAFBBIlPykrNXdvT1y8DwsByIrWk/Lse8
XvH5/PJuIMh4IRQUuRBQPAH3dvl87cwzEO3awIveWY4bKnIulFhHs5i5UL7X
ZSAXAgAAAGBX5EJAkYX9MtD+4IxzkI852uTMrJ6/2PWFIhIORyQSKd6Wb+RC
AAAAAOyKXAgojashnww5n57R+KHvu9+b+RNTd3rWyIUAAAAA2BW5EFBqQRl1
Zq499MmOWdRQJReaNXIhAAAAAHZFLgSUh0vjO9OOHZpVTR1yoVkjFwIAAABg
V+RCQOH8p/+Y/FtXh+yYmFnQ8IF7M7lQCZALAQAAALArciGgUELivHM6k2nq
m+Hakuela5FFptPYM/NMp6i5UETOjHvE4ynS5vbIiQKsP00uBAAAAMCuyIWA
wnl7yz2x75W23vwu/8zyjDfWL0/JdG7vOjTzP1rkdeq7P5X6twq51dTPIiOb
IXIhAAAAAHZFLgQUzsWRDUae0bRDLmd9RET2rV2akoXc63pn5n80XS5UX6Bc
6M7iZULado2jc+Zz6maIXAgAAACAXZELAQXk22n6fj3QO5HlAaflyRvNmc5N
tQ2zyymCByzrV1/nWCuTubwWSxHxDvbKFqdTnEXZuuVnroMzyNdmh1wIAAAA
gF2RCwEFFD4iDyeN3fn73jfT3v3EttT16r/Rd2pWf/KDkactx9loc9l+4c/1
BVUnciEAAAAAdkUuBBRSSLbfnZrR/I+mLXLYr4QPkaCMdD+Ycr8bW/pmPjYm
EhLvyFa5tzZ9vZ9r69rkNW9AwuH8126uZORCAAAAAOyKXAgorKOdK9PmNLWO
OllZX2952yrnwZmtYaaNSVo8+zo9s56fVsXIhQAAAADYFbkQUGghecfdLz9o
ss5/krcvtG6RsUB45k+fps40udDMkQsBAAAAsCtyIaB4roSDcmLcLXv6XLLd
6ZTnurqko6NDNnX3yq9GPPIfIeZ3lcLbW+7Rz4Hz5y2T/eRCAAAAAGwiORd6
fPS9Uu8SABTVpcO7ZePGzbJ582bZsHGrvDWL4VoAAAAAUMn+EPiN/GTjxtjv
oc3R30V7TvKDCIC9HO28i/FCAAAAKAvnxveYalBcV9csIwHmFaBwPvRsNo0X
+i7zyADYDPWFAAAAUHpB6V9rvWZNTcfBUu8cqhj1hQDYHbkQAAAASuu89DQs
jPVHP9u1Xy5LWE65t8u9tfH1ZX7ood4LCodcCIDdkQsBAACglN5YvzzWF72h
tlkm1BvCQTnl5zc6CotcCIDdkQsBAACgZIIH5PO18b7o7V2HSr03GYRk+93x
epwv+qhLXE3IhQDYHbkQAAAASuX0jtV6X3TjkXLuiMZzIXKD6kMuBMDuyIUA
AKhy4YD8ps8pG9qekqei2zNdTnnJ45XLpd4vQMlayr8fSi5UrciFANgduRAA
ANXrvHurPkcnebve0Syj/PxBKYXG5IFPxGtL19R1yoVS709G5ELVilwIgN2R
CwEAUJ1Cns16G3+TY4V8syl1DfDra9fKsUip9xR2dVX5PX5d61D2B0RCcsIz
ItudXbHxbx0dXfLzvmF5c8JnPf4tNCm/7u2W512HJPExf9e9M/bYnw6Oy+w+
+vnLhX7nG5UX2lqlc/hUym0f+cfll9HX91Rrhwx4s3fML3g98pKzO/aatLGA
r/uyP+Y/A155ra9XNnd0yFNtHbLJ2Su/do/LyaB13aT/cA9Kd/S5D/inbw+f
lpe7O2R9h1PGApV/AiEXAmB35EIAAFSh8BF5+BPzZOE8h3QNv6P8u19ca5eb
fgPdtvXN0u0n7Cc8KZtWOGS+wyG3OhaYPou1dUviGZEjOa8MySHXhrRj37Ra
0PuT+rCTfRv022scW2K50eudRr9X+24Mzernfz5yofPSt97IZ29W62xHAjLQ
8TXT6/pkx8G0z3RpYljWLFuQciy017XLb53VfORzy4+allsew9hx6kiq+x08
IpsaFuq3P3UkehQDB+Te2nn6v/1x2/45HovyQS4EwO7IhQAAqDYR2bMq/lvu
ZxNWDXv0963yW6+maQe1hlA0v5/YLivrGlLGr/1lY5OsbeuQ7m6n/HLEq4/l
+UNgVNYsnv6sNrbLrz3j4vV6ZWL4Obkt8Rmu2yKX9L8Qlr3rzc9d09Qj+12P
pOQgz3tns65YjrlQcEx/HYlNX3/NfyCW4ybvX7r12Y70rNYzoK7hcTnrdcsz
K4yM6OaUx0XE4zTqe3+3Vxtj5ZVJr0f+pXm5ZR4S8e5JyeH+z/CwPHnjvKRj
W/nnD3IhAHZHLgQAQPU55togzwymzlFJ+MCtjKWI/qYu77ouqE4R2Xm3Md7n
5YDFXXy79WzihtY+c/7g22k5rubV9Utj//Z3rS16bqSNTUrkSi+5NsuXFzuk
oXt/8eaRRY7Hcp+bahvkicb/ru/3xvHLcmViu94P7/H45X2PkVF8pXci5alO
bntQz4ReUHKtdzrv0h/3Raf6uLDsmx4jqB3nF01ZmJEha39/JPGy/Htix+7j
jgZ5VNnfxPiuH/S65GetK+X/q2uW4TRjkyoJuRAAuyMXAgDAhgJ79d/b5EIo
ichxeeym+NgTLS9xJw/diUzqt3/M0SaTSTdfGH5a78N+58A5/d/HtrTKk1om
Gn3+B5QxODX1nXImpx0O6+PsNh6ZZYc5+lo2rmoTT/Q1nuy5T+93d/ZujuUv
2r6dmH79Vya26vv89Ngl09Nc8W7Xb7vXpcwPje6ba9US/bZ/9RlZzekdxjih
bw2+m7RjU9K+KH6MrnW0R/+/acFRaWnqjB3zxP4mtu8NJz9H5SMXAmB35EIA
ANjPFa8x1qKmcZtcyv4QIL9CY3qdGqts8uiWezL+Tn9j/fKM9XSuJv3WT1dz
R/NhwBebm5Z+88lZ36i+v1/tPSh+f+bHvOMLWIxHColzhbkmUE3jFiOP0V5X
+8o0Y6iC4rwz/piP166SQxHj3/e2G/35xwaVvCg0mvEYS9DIh69vHbDc38QY
qdhzzKQ2eAUiFwJgd+RCAADYjzqP7Ot70s83AwpF/S1+Q0tSJhE8oIxns1q/
3hjnckNts4xbRD6J+VbadkuW2shHlTlY+dqsamFr9eDVMUzX1bbJpGnfjdel
jZEyjW9S5s39RZuWz0TEO7xVz33+q2OV9E+Y84zD7Uadpe+730t53ReHjDFX
5vFH06bnvyV+J1jO9asC5EIA7I5cCAAAuzHGAGjjDjyzKb0L5MnFESOb/HS3
eU28Mzu+maZWTtwH+5X6WPU9FuPdwrKn2XpelZUT21ZLraNOltdl3hL1imZy
3085mlP61YlaQonc6FfJY5gCe/S/cV3S2Jzk+VyJ3Oy/1K2SrcPHUms/K/Pw
rL/n56X7TuP5LOfGKVlUTVPfLOsxVQ5yIQB2Ry4EAIC9qPVLHq3CWiGoDG+n
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
n9IxVc16zItBLgTETi4EAHmjhf5mrj7Qi6mu6NFUrZDvFfpIY2FPYl5Tfns4
WzZpY7Iv9mBi/MNPa3FAVSjmXRXr0oa3wtZzj1/Qsqlk/bXiuI3yHK3o/4Yz
4bmR6fNxrLtY72TZxmI/9uzQdP92ZWuxDvGyjl1l81Ya8xwyf0ur3eX+NuTn
XJXvT/2cSeQ7pWOumvWYF4NcCIidXAgAzhk/WqiDWzbvIvFYri964H9zPxwN
fRsumfpZ18HBQj6Un88xuOOOcM3WYl3k5GfuN4bKKqDUR2L8zW9seXbWx3Pj
Ec6MHQ9/e83asHs4199OrydVaYzUWwOPTK893rZ96nwmz8Gvb5meazc2uPPc
+uTbwrFz/517/M6BdyZP8dFw1zXrC3WRGvIcMn9LrN3N+rehjma7Hpr1mBeD
XAiInVwIAM5J9EV/vzc976J0vNDtW3vCV66Y7pvePlX75ERq3Z7b1k1nRJ8r
5ELj4fG1Kxvu8zZZK/v2/tfLHi/tL6XHaKTrvOTm1z05NT5jIpzODoRvb5ge
r5BbSypf0jZZv+mj7ZvCN7dO15g5r61rajzCG4na3ld3dEz1W3Pnq3+qr9qY
55D5W1rtLjfG5pHC45dVrB1WH/l5XrlzUFpXulmPeTHIhYDYyYUAYFqyb1C2
Ns/48VRd6fz2DwMj04+X5Ea57d7diTXLEus9N1K95Oe6i33Hslrak07uuzN1
TOe3bgqHE2uaJddvq7St2bwrdazJNeaLc1i2F9YgT96XTD3W3lXo2zfqOWT+
llS7m/Ra4vUVa4fVRXHcVKX1D5vzmBeHXAiInVwIAKbl+1HldaWnJfuyv9C+
OdVPzc25yI81+mxHd/qxnOz0mty5Nec39j7bIOs9j4WeT03nLL+3cbK/WGGn
jnVfOfV4rvbvnTsOlvU9c2N4DnVdW9b//J11m8P+SutDjR5O5WedfUdS5yL/
7+XGhmzenUmfp4Y8h8zfEmt3uXr058ap5X7/oRnqGdVcIqsurSs9pRmPeZHI
hYDYyYUAIGciPLNpek7GzLU0xsOJwUz4j2ylhXkmwmuTj/3n8Ez9ifEwPDzS
cFnGu6eGwxuzfPa/PzYcDg8Mhjcq5GRJbw+/GDKZTHh+KBveHJv9yT8/lZ3x
d74/OhyOZF4MpyueqMY8h8zf0mp3IZyZ3N//Gm2wljeyv1AfqNKYq5ymO+ZF
IhcCYicXAoCc4vpHN5Ss6wPQaPJz6crWTmTe5EJA7ORCADBp9NDUPLDcnIof
VhoOBNBAftw1PQ/sI5sPzP1kZiUXAmInFwKAEE7vveNcXdZdTb0eM9AMToau
c+MbH87OMdmOOcmFgNjJhQCI00QYGR4J70zNvxgNPZev0McCGtb7oyPh9VPT
N+rvDjwox15AciEgdnIhAGJ0rPvawlo817VfPPXfN/cNzf1CgFpLrC12RXv7
VL3pXF2hQTH2gpALAbGTCwEQn9HCOtn57S/6KqzzDNAAzmQeSP29+ljbppBx
z75g5EJA7ORCAMTof7KHwje3bAlf7+0Lz4340h1oZKPh2b6esGXL1vAv/YPm
ji0wuRAQO7kQAAAQK7kQEDu5EAAAECu5EBA7uRAAABAruRAQO7kQAAAQK7kQ
EDu5EAAAECu5EBA7uRAAABAruRAQO7kQAAAQK7kQEDu5EAAAECu5EBA7uRAA
ABAruRAQO7kQAAAQK7kQEDu5EAAAECu5EBA7uRAAABAruRAQO7kQAAAQK7kQ
EDu5EAAAECu5EBA7uRAAABAruRAQO7kQAAAQK7kQEDu5EAAAECu5EBA7uRAA
ABAruRAQO7kQAAAQK7kQEDu5EAAAECu5EBA7uRAAABAruRAQO7kQAAAQK7kQ
EDu5UCMYDyezL4ZMZiAcHsiE54eGw+nxeu8T1IK2D9VxrUB9TITT2cFwfHSi
3jvCIpILAbGTC9XTWDiyY0v4fMuK1GdRfvvjLbvCa+77aUraPlTHtQK1l8uC
MuF7PX8drm+dvtbuOvyzeu8Ui0guBMROLlQnEydC9xXFz59Vy1vD3b17wtO7
e8NNq1ek3pMnR3xHRRPR9qE6rhWonfFT4bn+PeEbnR3hMxUyWDlBc5MLAbGT
C9XDWNi5dlXhvF/YsiEcTn38vBV2rL849fig74NpCto+VMe1ArV0ZuD+imPy
5ARxkAsBsZML1d4bT3w59dnzcLbCzfz4C+HmTywvPOf8zh/VfkdhgWn7UB3X
CtTY+GgYHh4O2Ww2nMhmwra1F8sJIiIXAmInF6qxyfv4LyXu45eteyy8N8NT
k+9Nbnv0VV8Gs4Rp+1Ad1wrU3Svbb5QTREQuBMROLlRbp/fekfrcue3QmzM/
eWR/ao77RzYfqN2OwgLT9qE6rhWoPzlBXLzfQOzkQrU0Hh5fuzJ1vg/Mer7f
Cls/XfzOOFc/YqhWuwoLStuH6rhWoBHICeLi/QZiJxeqoZJaEOe1dYWTs75g
IuzfkJ7f/milGhPQ6LR9qI5rBRqCnCAu3m8gdnKh2jk79EjqMydXM+KdOV7z
0rbrUq+5qe/lmuwrLCRtH6rjWoHGICeIi/cbiJ1cqHZeKqlheGnP83O+5u2D
f5d6zSfVjmAJ0vahOq4VaAxygrh4v4HYyYVqp3TdmMu2HpnzNaWfU8vausPp
GuwrLCRtH6rjWoHGICeIi/cbiJ1cqHZK7/e/0Dt3ddCy+/32bXPOKYBGo+1D
dVwr0BjkBHHxfgOxkwvVykR45t41qc+cB16Y+2SXfw/sfp+lRtuH6rhWoFHI
CeLi/QZiJxeqldHQe/mKeX/muN9n6dP2oTquFWgUcoK4eL+B2MmFamUiPF2y
lrDvgYmDtg/Vca1Ao5ATxMX7DcROLlQ7pevMVLOWsLoRNANtH6rjWoHGICeI
i/cbiJ1cqHasM0OstH2ojmsFGoOcIC7ebyB2cqHaKb3fv7Tn+TlfM5Z5MPWa
Czr3hoka7CssJG0fquNagcYgJ4iL9xuInVyodsq+0+3YFd6b4zWlfYQv7ph7
zWJoNNo+VMe1Ao1BThAX7zcQO7lQDY0fDTd/Yvk8xvpPhGc2pdcsfnhorh4C
NCBtH6rjWoGGICeIi/cbiJ1cqJbGws6rV6TO94FZz/do6EmsWXxRy/owaHIA
S5K2D9VxrUAjkBPExfsNxE4uVFuv7ro1/bkz8LOZnzz6VPh8S/G5F27cW7sd
hQWm7UN1XCtQf3KCuHi/gdjJhWps7HC4oSUxR2Dj7hnrg7722C2pz6iHBq08
zBKm7UN1XCtQd6X13OUEzU0uBMROLlR7r2y/sXDOVy1vDU+MVHrWifDVjyf6
BVXUHoVGp+1DdVwrUF+l9dz/PiNzbWZyISB2cqF6eCt0X1H87DmvrSucSH0Z
PB6eundN6n056OOJpqDtQ3VcK1A/o2HPhotTOcGnOvfKXZuYXAiInVyoTkaP
hi8l1py5qHVteHRff3jm4L7wtbXFe5Hc98TfMi+AZqLtQ3VcK1AzPx/JhEd6
tob7OzvCZxL5QHJbsfyK8CedW0JPT284NDJe711mAcmFgNjJhepo4mR4Ysst
Fe89cttnO7rD4VMWlqEJaftQHdcK1MSZknpCc20PDblhbiZyISB2cqH6Ozt2
Khwb6A97du+Z2vb2D4SXTnkjaH7aPlTHtQKweORCQOzkQgAAQKzkQkDsSnOh
A3IhAAAgEnIhIHZl44WU0QMAACLxvlwIiFwyF8ptq9vaw7XtH2y7qrU1/EHv
8/U+JAAAIApjoW/DmtDa1vaB+zBXtrXKhYColeZCH3a7bOuReh8SAAAQhbHQ
e83KBe3PyIWA2Bzbdp1cCAAAWIJGQ+/lC9eXkQsBMXr1ifvCJa2tYU1b24fe
rmpdaR4ZAABQM0e33RJWLFB/5rdbVoeHBt+p9yEBAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAsqv8HCj/Nkw==
    "], {{0, 339}, {1158, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVlgdUU1kax+976Y0WiICU0JsgnQBSQg+gIB1shCSEUEJIAUFsyOAIjgUV
ESwDOgqi4FgAGQtiwYII9j5BBgVlHSzYUNkXWMLO7tnds985995fvnzvf7/7
knvO3yglOyoVBgBI8MgUxc5jisXs/Gg15EOsUCLgC3lcllDK4/PEjBQISfaQ
kQmQe9giUSaMVGUJpeKoYD96QmISHScHJIAFeKAGTNgciYgZGRmuqJ5a/xof
7gKFILhlq9D69+//a6hzeRIOAFAkwilcCScL4ePIaOaIxFIAUAo9kzypSMGb
ENYUIw0ivE/B/EluVXDKJHdN1MRE+SMsBwBPZrPFfABIw0iensvhIzpkxcnt
hVyBEOE5CHtz0thchAsRnpWVla3gOoQtU/5Jh/8XzRSlJpvNV/LkWSYCHyCQ
iDLZ+f/n6/jfkZUpm9rDGBnkNHFIFLKqIO+sLiM7TMnClHkRUyzgTtRPcJos
JHaKORL/pCnmsgPCpliWEcucYrZ4+lmBlBUzxeLsKKW+MHNeuFKfx1IyTxIY
PcWpgiDWFBekxcRPca4gbt4USzKiw6Zr/JV5sSxK2XOqOEh5xizJdG8c9vRe
0rSYkOkeEpT9cHkBgcq8MFZZL5L6KTVFmZHT/WcGK/OS3Gjls1LkDzbF6ezQ
yGmdSOX7AdHAETgDv4nZHgApb6lU0ax/tihfLOCnSelM5Lbw6Cwhx24W3dHe
wRUAxd2b/Gnf0SbuFES7Op3j+wLgcgUAOGY6x30GwMkHyJY+0zlr5P6oLQKg
o4ojE+dO5tCKCQOIQBVoAh1gAEyAJbBFenMFnsAXBIJQEAFiQCJYDDggDWQB
McgDhWA1KAFlYBPYBqrAHrAX1IHD4ChoAafAOXAJXAM94A54BORgALwCI+AD
GIMgCAdRICqkAxlCZpAN5AgxIG8oEAqHoqBEKBniQ0JIBhVCa6AyqByqgmqg
euhX6CR0DroC9UIPoD5oCHoLfYFRMBnWhPVhc3g2zICZcBgcAy+C+XAOXAAX
wxvgSrgWPgQ3w+fga/AdWA6/gkdRAEVC0VBGKFsUA+WPikAloVJRYtQKVCmq
AlWLakS1oTpRt1By1DDqMxqLpqLpaFu0JzoEHYvmoHPQK9Dr0VXoOnQz+gL6
FroPPYL+jqFg9DA2GA8MC5OA4WPyMCWYCsx+zAnMRcwdzADmAxaLpWEtsG7Y
EGwiNh27DLseuwvbhG3H9mL7saM4HE4HZ4PzwkXg2DgprgS3A3cIdxZ3EzeA
+4Qn4Q3xjvggfBJeiC/CV+AP4s/gb+Jf4McIagQzggchgsAl5BM2EvYR2gg3
CAOEMaI60YLoRYwhphNXEyuJjcSLxMfEdyQSyZjkTppPEpBWkSpJR0iXSX2k
z2QNsjXZn7yQLCNvIB8gt5MfkN9RKBRzii8liSKlbKDUU85TnlI+qVBV7FRY
KlyVlSrVKs0qN1VeqxJUzVSZqotVC1QrVI+p3lAdViOomav5q7HVVqhVq51U
u6c2qk5Vd1CPUM9SX69+UP2K+qAGTsNcI1CDq1GssVfjvEY/FUU1ofpTOdQ1
1H3Ui9QBTaymhSZLM12zTPOwZrfmiJaGlrNWnNZSrWqt01pyGopmTmPRMmkb
aUdpd2lfZujPYM7gzVg3o3HGzRkftWdq+2rztEu1m7TvaH/RoesE6mTobNZp
0Xmii9a11p2vm6e7W/ei7vBMzZmeMzkzS2cenflQD9az1ovSW6a3V69Lb1Tf
QD9YX6S/Q/+8/rABzcDXIN1gq8EZgyFDqqG3ocBwq+FZw5d0LTqTnkmvpF+g
jxjpGYUYyYxqjLqNxowtjGONi4ybjJ+YEE0YJqkmW006TEZMDU3nmhaaNpg+
NCOYMczSzLabdZp9NLcwjzdfa95iPmihbcGyKLBosHhsSbH0scyxrLW8bYW1
YlhlWO2y6rGGrV2s06yrrW/YwDauNgKbXTa9szCz3GcJZ9XOumdLtmXa5to2
2PbZ0ezC7YrsWuxezzadnTR78+zO2d/tXewz7ffZP3LQcAh1KHJoc3jraO3I
cax2vO1EcQpyWunU6vTG2caZ57zb+b4L1WWuy1qXDpdvrm6uYtdG1yE3U7dk
t51u9xiajEjGesZld4y7n/tK91Punz1cPaQeRz3+9LT1zPA86Dk4x2IOb86+
Of1exl5srxovuTfdO9n7Z2+5j5EP26fW55mviS/Xd7/vC6YVM515iPnaz95P
7HfC76O/h/9y//YAVEBwQGlAd6BGYGxgVeDTIOMgflBD0EiwS/Cy4PYQTEhY
yOaQeyx9FodVzxoJdQtdHnohjBwWHVYV9izcOlwc3jYXnhs6d8vcx/PM5gnn
tUSACFbElognkRaROZG/zcfOj5xfPf95lENUYVRnNDV6SfTB6A8xfjEbYx7F
WsbKYjviVOMWxtXHfYwPiC+PlyfMTliecC1RN1GQ2JqES4pL2p80uiBwwbYF
AwtdFpYsvLvIYtHSRVcW6y7OXHx6ieoS9pJjyZjk+OSDyV/ZEexa9mgKK2Vn
ygjHn7Od84rry93KHeJ58cp5L1K9UstTB/le/C38oTSftIq0YYG/oErwJj0k
fU/6x4yIjAMZ45nxmU1Z+KzkrJNCDWGG8EK2QfbS7F6RjahEJM/xyNmWMyIO
E++XQJJFklapJmJyumSWsh9kfbneudW5n/Li8o4tVV8qXNqVb52/Lv9FQVDB
L8vQyzjLOgqNClcX9i1nLq9ZAa1IWdGx0mRl8cqBVcGr6lYTV2esvl5kX1Re
9H5N/Jq2Yv3iVcX9PwT/0FCiUiIuubfWc+2eH9E/Cn7sXue0bse676Xc0qtl
9mUVZV/Xc9Zf/cnhp8qfxjekbuje6Lpx9ybsJuGmu5t9NteVq5cXlPdvmbul
eSt9a+nW99uWbLtS4VyxZztxu2y7vDK8snWH6Y5NO75WpVXdqfarbtqpt3Pd
zo+7uLtu7vbd3bhHf0/Zni8/C36+XxNc01xrXluxF7s3d+/zfXH7On9h/FK/
X3d/2f5vB4QH5HVRdRfq3errD+od3NgAN8gahg4tPNRzOOBwa6NtY00Trans
CDgiO/Ly1+Rf7x4NO9pxjHGs8bjZ8Z0nqCdKm6Hm/OaRlrQWeWtia+/J0JMd
bZ5tJ36z++3AKaNT1ae1Tm88QzxTfGb8bMHZ0XZR+/A5/rn+jiUdj84nnL99
Yf6F7othFy9fCrp0vpPZefay1+VTVzyunLzKuNpyzfVac5dL14nrLtdPdLt2
N99wu9Ha497T1jun98xNn5vnbgXcunSbdfvanXl3eu/G3r1/b+E9+X3u/cEH
mQ/ePMx9OPZo1WPM49Inak8qnuo9rf3d6vcmuav8dF9AX9ez6GeP+jn9r/6Q
/PF1oPg55XnFC8MX9YOOg6eGgoZ6Xi54OfBK9GpsuORv6n/b+dry9fE/ff/s
GkkYGXgjfjP+dv07nXcH3ju/7xiNHH36IevD2MfSTzqf6j4zPnd+if/yYizv
K+5r5Terb23fw74/Hs8aHxexxewJK4BCBpyaCsDbAwBQEgGg9gBAVJn0xhMB
Tfr5CQL/iSf980QgzkVhx+NWARDZDkANwpbIqoqsCmsU4wtgJyfl+EdIUp0c
J7XIiMPEfBoff6cPAK4NgG/i8fGxXePj3xBRFOJt2nMmPbkiwm0Raz2YFOfn
eD0kB/xr/B0nNA9Q
      "], "RGB", "XYZ"], Interleaving -> True, 
    MetaInformation -> 
    Association[
     "Comments" -> 
      Association[
       "XML:com.adobe.xmp" -> 
        "<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=XMP Core 5.4.0> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#><rdf:Description \
rdf:about=xmlns:exif=http://ns.adobe.com/exif/1.0/> \
<exif:PixelXDimension>1158</exif:PixelXDimension> \
<exif:PixelYDimension>339</exif:PixelYDimension></rdf:Description> \
</rdf:RDF></x:xmpmeta>"]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{668.5921875000001, Automatic},
  ImageSizeRaw->{1158, 339},
  PlotRange->{{0, 1158}, {0, 339}}]], "Input",
 CellChangeTimes->{3.687481967997816*^9, 3.687482238522863*^9}],

Cell[BoxData[
 RowBox[{"T", " ", "=", 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "/", "10"}], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"2", "/", "4"}], ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"2", "/", "18"}], ",", 
       RowBox[{"22", "/", "18"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], "}"}]}], 
    "}"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.684481173252945*^9, 3.684481260033887*^9}, {
   3.6874822946067467`*^9, 3.687482342732271*^9}, 3.6874823853200274`*^9, 
   3.6875102522398653`*^9, 3.687510368805684*^9, 3.6875171256011066`*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       FractionBox["1", "5"], "0", "0", "0"},
      {"0", 
       FractionBox["1", "2"], "0", "0"},
      {"0", "0", 
       FractionBox["1", "9"], 
       FractionBox["11", "9"]},
      {"0", "0", "0", "1"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]],
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{3.687517254070054*^9}],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   StyleBox[
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", "5"], "0", "0", "0"},
        {"0", 
         FractionBox["1", "2"], "0", "0"},
        {"0", "0", 
         FractionBox["1", "9"], 
         FractionBox["11", "9"]},
        {"0", "0", "0", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]],
    FontSize->16,
    FontWeight->"Plain"], ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "4"}], ",", "1"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.684481274104426*^9, 3.684481292026649*^9}, {
   3.6874823887740383`*^9, 3.687482526377604*^9}, {3.687510272499424*^9, 
   3.687510285361217*^9}, {3.687510375915991*^9, 3.687510376340221*^9}, 
   3.6875120256932983`*^9, 3.687512240642074*^9, 3.687517140117186*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{"-", 
         FractionBox["3", "5"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        FractionBox["7", "9"]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]],
  FontSize->16,
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{3.687517246501342*^9}],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   StyleBox[
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", "5"], "0", "0", "0"},
        {"0", 
         FractionBox["1", "2"], "0", "0"},
        {"0", "0", 
         FractionBox["1", "9"], 
         FractionBox["11", "9"]},
        {"0", "0", "0", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]],
    FontWeight->"Plain"], ".", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "8"}], ",", "1"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.6844813090431356`*^9, 3.6844813357473507`*^9}, {
   3.687482535043529*^9, 3.687482548538183*^9}, {3.68751029684956*^9, 
   3.687510297297469*^9}, {3.687510381630329*^9, 3.687510382204254*^9}, 
   3.687510438664296*^9, {3.687512065116406*^9, 3.687512073866288*^9}, 
   3.687512235426135*^9, 3.68751714954755*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        FractionBox["3", "5"]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        FractionBox["1", "3"]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]],
  FontSize->16,
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{3.687517237765183*^9}],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "5"], "0", "0", "0"},
       {"0", 
        FractionBox["1", "2"], "0", "0"},
       {"0", "0", 
        FractionBox["1", "9"], 
        FractionBox["11", "9"]},
       {"0", "0", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ".", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", 
     RowBox[{"-", "8"}], ",", "1"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.684481369404351*^9, 3.684481412358058*^9}, {
   3.684481483890697*^9, 3.684481487929056*^9}, {3.6844815203642797`*^9, 
   3.6844815345789843`*^9}, {3.687482565124482*^9, 3.687482582274837*^9}, {
   3.687510332876534*^9, 3.687510333626423*^9}, 3.687510387750935*^9, 
   3.6875105176438913`*^9, 3.687512183607986*^9, 3.68751223058751*^9, {
   3.6875171586614027`*^9, 3.6875171592094707`*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        FractionBox["3", "5"]},
       {
        FractionBox["1", "2"]},
       {
        FractionBox["1", "3"]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]],
  FontSize->16,
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{3.687517231597027*^9}],

Cell[BoxData[
 StyleBox[
  RowBox[{"MatrixForm", "[", 
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", "5"], "0", "0", "0"},
        {"0", 
         FractionBox["1", "2"], "0", "0"},
        {"0", "0", 
         FractionBox["1", "9"], 
         FractionBox["11", "9"]},
        {"0", "0", "0", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3"}], ",", "1", ",", 
      RowBox[{"-", "4"}], ",", "1"}], "}"}]}], "]"}],
  FontWeight->"Plain"]], "Code",
 CellChangeTimes->{{3.684481422660581*^9, 3.68448143544692*^9}, {
   3.684481490721542*^9, 3.6844814947852497`*^9}, {3.687482591869157*^9, 
   3.687482605563406*^9}, 3.6874831185745*^9, {3.6874832404528513`*^9, 
   3.6874832683484993`*^9}, 3.687512214337381*^9, 3.687517165530902*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{"-", 
         FractionBox["3", "5"]}]},
       {
        FractionBox["1", "2"]},
       {
        FractionBox["7", "9"]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]],
  FontSize->16,
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{3.6875172239808493`*^9}],

Cell["\<\
This result makes sense since all of the resulting points lie inside the \
canonical view volume. \
\>", "Text",
 CellChangeTimes->{{3.6874826315005503`*^9, 3.687482678596662*^9}}],

Cell[TextData[{
 StyleBox["2) Provide the perspective projection matrix that converts a world \
space with parameters (view angle 90 degrees pointing down -z axis, near : \
-2, far : -10) to a canonical view volume.\[NonBreakingSpace] Provide the \
points that get generated when you use this matrix to convert the points of \
square with verticies\[NonBreakingSpace] (-3,-1,-4) (3,-1,-4) (3,1,-4) \
(-3,1,-4)\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\
\[NonBreakingSpace] Does your result make sense ",
  FontSize->16,
  FontWeight->"Bold"],
 "? "
}], "Text",
 CellChangeTimes->{3.687482736667247*^9}],

Cell[BoxData[
 RowBox[{"\t", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
0WcXad933st+Cq6FbDyy34snKgnITn9HN6w9fMXY5jX+uDF5707++y89Lj6y
OpxesHq+w3mxjk5vQpVRK3Dz861/bySMc6d/2n1TYrUt2s626udzWthuzZ5L
eGyiUvdBdNsOcHow3nUA9BMAHXM+/eTPdXoo/SZOQI5Q06n0o8T+nORhr7km
U+SSOq7PbfXynIOyPXkuUWSz8xhFEWBvprG/ZXNhi6Ldti7lx9/3+HfeDYbp
3/r0IE1Ps0ZFYBW1LXo0XSs2HpNtyKy2BK9p5FNgp23oD+hx0OOf9Qb5tfYH
/wX9TNftAOCzk/ikSwNmowShzetn9kqbJaaF8MzWY+9cS12rN3eXPqsPxbN6
X8Tg2uqgmn+fjndaee7sGLnQHek1SIPVcy+Og4/D7PkfpGPeaZ72t6K2xZ1k
rs0/Vcft0qZTUp0VkDZOx6H02sQxLfvv+5/4afrZ73y383YA8CmAfgKgY86j
n5ZlPlKhX57Gg8q7NtNPS1Ouvn+FNfYS3+L19OZBOna4JA/4vvcvOi3D1Vs9
fteKv2dr+UVklvHXvXq7Y7LUCU1kiWmrh7FMqqqmm05OcJpJs5D5iOp1jn1S
ijY9aTPy3Bk9lzaWPCfXVGnyMqHHsh29ISmaTsbrlP73X/+VztsBwKcmckgS
xqP74Yg/e6XNEi0r49BqzoaNWmSV9fSGGgVJkj7D4hg3IN1aFlokHZcL/8yT
4VHs8fqhpe4o/Taxa9JEkmky4vNGsqLmz7tuOieKf+O1H+prSvgzPp69uR69
sXmxAS1+5JKajlmT8ZBrJ0kh3TBo+rf/Jv1K5+0A4JMA/QRAx5xBP8Xz3AaY
aEplHlbSbfLeZzS1HIqjYh9dZ/O7z69lFEtMRmFbPAvv7sAq1lsZaBX/Cqsd
MRin7+aVXptmdfzi0i81YP6nFUs2DukdLFrpqIUtUakBHPOaEEqZExWRWtgs
vE4Ej4O5X4uD6bYdAHxmbDl9Hgdy1efdl2jhpRrBnJLjx6t9+jIZSqkPJLbu
bczibMV5Ep8mhQZTxRplyZLVjniWJ/lYeF/U8XOKuuj1uDdX5+PIyZ/2mPv0
xfppYk2IRVjuqvD3S9lEV1v/2znaAcBnAfoJgI45j/8pzt6ZAfchfR3V84QT
irJ9Uq3FYu/KNfbS45ryqqOyBnhlLceE+5vybURliQW/XN+ytjYl91e11BKP
Q/JSm8n3/b22/Jh6jkSlRjGvncfXzxgXuQ8xLdg87pi1IavtXuZOPdfmgbe2
AwCwO/HqIbKENarr634m8WoAZWs/CfUPyuPuXyzhCD7+irVfElY7ovQ/l1qJ
663quqR8HGmtJX7EcUscW/g7Q/RJFaOWP2PzX086vy7vVRJiAirfvL0dAIB1
oJ8A6Jjz5T8xf9GG+lIsh1p4z/KaCKn9Ihz3JpexMYbgxwlI7vNYelPILyrt
mbtaTT7XaK8LtTp/La5wr61fnW8VahQrLE+C1+PLYhaXzpSeemWsi0aVMnrC
PLBa+/G2tQMAsC8+yWUMbWstT16vhs9phMx3/HVk8l3DGZtD0oX8nmDGx5gs
v4h/0Dx3lPmrWmtwFhxz3GpaD4LX40vbYi/JVHjcnjbzKtfilLld9bVTd2gH
AKAB6CcAOuZ8+mkhl/nR7TVqm/bh+kmwIYR8qEqeccT9V9XadgGzg6o1nvha
Sm21xBPfJl3TSdf33zR9ymoNrq6b1yhmNYCFmuPl9viike2v/zh8HrheQ3h7
OwAAeyLoHcNrGbUa9+Gxt6LuYr6scbWmC/Nf9ap1M5muqtXkS7xpMY4MWNxc
neONW83rQbA17MqtNyTNtBvsOL62an1s2qUdAIAGoJ8A6Jhz6aeQ1OK80qvX
uk9jjrIY2zKQyZoZhUbqkWZXHVmxw2tHVM7CbJxeLQaHx8dMZjsuuvIBRHuI
2UmC5pMMe2OtVx7nJ9XiYLptBwC3QGSr7HlrHbWE2Fs+amWag9ejkw2LjJeV
Rrob61R9QvmY/FwbGxeFj/2uti6SbzXHIp8G7tMX556Y5utPGud6xOOZf+61
Vnui03YA8ImAfgKgY86knwQfi95Wl5bpiCzuLqbg3aGydJw/10ic63xWzapf
p8At12gcGZX5XVF35BZKaYywnKw+vWX3IpiT8Xq62k+lzXEnZTkRIb3NlvSt
EJ9YySnPr9Mn83XOxkYWB1OpPdF9OwC4Bdi6rrXxRER8ppMkIMctlED67Goj
PmZltSfMpjXthBi2as3uUNAd1ePK2OXSn2MbxunqbIrjcpAtkTpLzxXw+MRa
/Z4Mf27Sm1uMWpXaE9U9O20HAJ8J6CcAOuZM9SPey1pUw7X6S+zKmI7okSQN
K+/b2DNZnMdba5wHj2F7qOUilzXv7iWdppm9U6zdws7Zl8l2iprB4/X1TY5D
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
ysZPXJoUGuFZtymKAzIkrin0VBQttUFVI/QnZPsBBZ5DmiT4OHeqi3eAfkqv
8bnou/LrlKT8332SXsasXz8odmX/bW3afG/+gH5XndBEllbPUvb9Yzn/TFV1
crLnZ4dzZPhztXLvch9XMGMxgez61cw3nH5nqbNK3YZa7eCWQf4TAB0D/QRu
E1vu5bFGXu3vvjlhNpyCPPibwtV57FtVOUekj0r9Med/Tm2WUjc8ag6FrkPL
wKfpuLfylciiDzNgOmI3W/8A/eSbgv5PtcVYJz9vSMzG+QfBf7NLm7bfm4wl
s930StLVjudIlvl/P6e667HQfxNNW+0z0tI2xGQW9/RJVlcaMdWmy1R6LYuc
rHsZtdrBDQP9BEDHQD+B2yQJffKb+rtg2yl2i5UbzukptYUfXnapLR2Ta89T
u7q6Zxx4ZM/n5IYbfFxJRF5qky/S/ZaNF1t8V9qWPL/FzvJKfIoa6kuHnkP2
e5GZkgR5LokbIs+fI8S+qU7lk3AuF2PkiJbirQ1nTK/cM33A64dPrGom0EIZ
MPsm71lxSJ7nke/71S39DQN/SXJ/pRMcP8j/Vt3PS48NKv0vmMlMO30dGYIN
xcf5Mv5tvza135v803et+K4hOcIF7XOOOMtrYrUDC80lW4Xvb8nyyVZt0wv9
KVyXtn5dANwM0E8AdAz0EwAVhDpibfqJ5cqXdnALkWvRc0M+h/Ey5D4Ced5w
ZEy2IVd8Cdkmz6r2eOTNSR721nNseoJ/I8sfkbjdHoQ2t0V7eM8yBBu9+rtH
zEZfW49WsFlYTYWoiAtdqx+ejrVDrm0ymRHZ8vpvt+emOPwXtEt99o1U86v6
TNM9v3r7t6n13qxwjVGD3bbnOaim/4YG04aJawh9W+b1KYRnVXvHXAC4YaCf
AOgY6CcARGJmq434XHrs0VTTaGrXbOR+mbMekKWrlbp9nlWtTSHPo+Z8DqVe
p8InpXgmn7QZee6Mngvb917QWrZe1CjoS2Q5HgWpluL7FfZq5BQ5MMXfhyN6
FPL88Z7lJN60+E0GtKjIpw3+yMBi/hLtfXUnI0dd7z+rnVf+pNxXsuoniW+T
rumk6/XNIMPQ6KnYXzamZKzto+fHLvzyJFFDjF7ZNoON8Yto/za13pvVp0K8
ojAXsOc5MhZymRc1rvirPKOsE9En0aUXO1rLvQbgxoB+AqBjoJ/2IokpThKK
Y7ysPycJy7N4EOrvRXM+L/6Y1QxLVvWpH7JYpkyjME3SXz1DsZPbh5KmsLVM
ZU0t8jnUPCdlIQ8abN2Y2aI8XyQitbCjH4rYqWVpT/bE/K2Q7VfGjeU5XgOZ
1LFQOy2vl+HRmzklx0c/LvGtCfNvBOIHoq/ECqrHmBKz30t7f6kXvphB1Ybh
umq44zhb5CwNtN1qnqd9rvQRqbUTlH6pO8k8qE2t92b1KcvrmsyET/c8B1sv
+Jt6ffQWfUYttdrBRZK9M5P8/XnuK/mkQD8B0DHQT7sQ+zYp41ptrd6AlFcb
7+1PRFTOZ/dqdSVCmyZCnNzdaFzoon4lX+NZnbH+kEvsoJrPz/I5qKyTVp2b
D+d87dPV+WNaaCP2t3xXYe5eF2OWmuLGCp1vvXD9VI0pAyVvhe+jtNFtw1jV
jxPskqofJdWrpb+H5QS12foR2/dJ33Vtsf3qR8Suzn5jU5QrYr/wy36xT5s2
3JsM1h/79JZdaDAn49WhZM9zcH9Vr3r96ZNQ+lDleTWuUmP3tF6THVwGWRyy
Qg+izzv73ccK2Zi7OS7QTwB0DPTTNkKxrm5vSJppkS4P+d+GWsOcLLg64mWh
afpk+s0aIw5dMrVJxRbI/Dmm7VLUcAifZ//Ccl4ysnioSjzV6tvJGPF9l840
r1GR2xuSRl5xsCWt7PO7sUnVlPyWXH0h92UtDwUUcN+dbNpkFnoz1xtCHJpo
7/NcnTHxknP8Xou2/qL0k4yNPeya/fST6N9y2PWkfarUc0pzbN32Nm24NyTm
Aspkp30211JZ39zrHOL1S5W/J34ZO5jqM1E+CblPj/Kqbp+CF9gFEZA65OPk
44tOlqlX4ofVOd6cRwP6CYCOgX7aiFgPqld9r7sGt40rtgm4QkKW26+21dxL
1YrvzEh9qa5HmvkhZc0kN1ifT30r/T61vuO9FvF3Yh1rwR7kNodGtlh3T8jj
r9Z289l6OFm8V+UxFvqwAd9TC+I4uPKBGCwvJySlx/+uzV1y5xrLB7LEe8p8
PdnvoJDjOqQXax09yLvUamy4pl31k83z7R4VkzzXJmVUaCfJqNU52aNNG++N
qHsK3yzTiPucg9chr/dfNgfRm1Cleorgh13FJtbbCM4Jz2X7QtKr4B9MxzAe
79yUTwcOAvoJgI6BfmqHx+Ksx45k8HzwSmwMuDISFt8m1+pNsz38WUXbZPPd
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
7w3XbRtiVHfoa1n/8Zw5OX6ttwXps5Ae59c6VRL55KTPkePh5XVxhA4po/7a
ezPLA1Vel+e+us8F9BMAHQP9tDN5XWAnt3kzW8gLcLNOSmiTNBjQw0B8//bo
cTig+96AjCIfLXCm9NSvv5+HZPnczor8JU1VqeE9Xsbgy3Sq0vM8znNEmfcp
zK63J55/3U+wtU2b7s1P/DT97He+u/W+ZXkypjJeuxcPykywsWN60yT2HW9F
l/fnurC+dJ8Wxd8jb0bPwnVfTU7gjn1tl3t2zr4mrrvwqOe9jaZKtSbf+loM
W9q05d78+m/8tfSz7N/CvNJgmO//IE0LDbdLX0uvPu0/UtF/7sqap4lP+gtf
k/VeKX0WUdo3he/sKbAZL5Rs/QbHXulm5927wnmVKwD6CYCOgX4Cl0nsmjSR
ZJqMBqx/yopKqqqSbjq53eW+FnZqT6KFH6W6w+B+wmL+fakNqnZbf0K2H1Dg
OaRJ/LO7E9Uq84yVjXc3VGha2Hv3I4mehz3WroXw3O3Spk335rd/6zfpe1vu
GyUuTQp791m3KYoDMoS4mrxWSmq3qkPR3pUo8zQtlGHNDh6Qk36p9zoprrvH
PrsW/bRLX9vlnp27r2XX+FzoG/l1SlKhb6WXMd0xzWJX9t/Wps335g/od9UJ
TWSJ6emHsZx/pqo6OUGyW1+jTJOrlXuX+7iCGbMJ2fWrmd8i/c5SZ5W6DbXa
wS0D/QRAx0A/gcvG1Xk8UmWumvl1Uv0hGE4sfumbITmpaRa6Di0Dn6bjlV1/
L4sx9wGz7U5jfyVkSdV5e81eRTcl79rac7drm7bdm82fRSx/+0ER1jVL37+l
DfyoOYUWkEgt5v7vhjJpxb+1eUCxP13ZtP0xqYWPY5LF5LB4xT69XVmt9o/e
s/P2tRTfZDoj/83GOq1cljEb5x8E/80ubSrZ1NeIljxGteJM3fEcyTL/7+dU
dz0Wz8lE01b7jLS0DTGZxT19ktWVRky16TLO5keGxb1GrXZww0A/AdAx0E/g
khHikVRH+Duv0fykV+PoFy991p+5X4fvP7Gq2RkLZcDeOblNG4fkeR75vr/X
lh8T1gOz0vOKNfCFWlORo9auc982td2bzZ+F83ItqhEtRVM3nDHb+z6zdVOb
Nft4IYs+lQGZRW0At7ZWq1b4mmKmC0cVrXf5HOGe5ezR17Kv8L207+zX1/zi
mLXeJq5HNzIEG4qP82X8235t2tTXxN+8qu/3OUecBXVV1iNPNZdsFb6/ZXUd
6pFe3D/hurT16wLgZoB+AqBjoJ/ABSPYTWIsGLfX1tejZb6a3oS88o/RvJjv
rtd0Tvv/kNubmekX2YINuvfWJ1s0atl5v9Dzq0cigVXEu30jUXZJe7ep5d5s
/ozXFV5bW1V4//L6AOI6l2L9i2ztMx6nJ+qE0h9wdTX9j3XP9uhrWX6SfHBf
S6+npmXsUp9lfaryic9+x1U/3LNNm/paimuMGuy2fftaTf8NDdZ/Ere6ljk7
QqjNor1fVW8D4LhAP4GDSCiOE0qSBDV69wb6CVwuiVfEiK3FsxV24kBdi4N6
K9ZaEu137uup+0S4f+hRW/l8Et8mXdNJ1/ffNH1KvvD9oo+p+mwlLMarjGva
t01t92bjZxGPm1qzgwOLzf2zNVkEf0Cl7gDLs8lsY0s8AdMI5f28Fo51z/bp
a5kOtV8P62u6rtF0Lvq3ooYYvbJtBuuHuf9yzzZt6mtiX76XhRi9ffsa8XXS
spoqor+qzCHM5xaEJvP1+a7N1wnAkfmM+inxaappO42FWvrONkyLHHfdL3/Z
rN4BWt2WSNttOlsC4Dfen/Se6GbFHhEOJHdmkDSs5et+06P74ZiU9LhlEAun
mefXs9H2ST+3xOvd6bdLP3+1r+z3EoF+ApeLX/poejKJIwnPB5KoOsJ4Rc58
Vn+M2+/LMtasttY9t3VPs4bXUms+r+ijMIuaevu2qe3ebPxMnPevObl8U2K2
aGm7hnOFXZNoqVfsabFhwvdfmz/gWPfsXH0t88WUPiK1doLSL3UnmQe1aVNf
y3xbZV7XZCZ8uuc5Ml9cc330Fn1GLbXaAbhFPqN+iuzGdWN2iQOR9dmV3IOI
rQ+5vvVouqlYa2pHbLs/cn0t89CmyWCHeyjUM+VrU2w/hp1t59+uX7Uhrgro
J3C5lH6X0m6yDSOv6cXsploefmQ32aht9lc6bhV9v55vdByyGLfi2RpblU9Y
nNXYZD7z/drUfm82fia8Y6s+gZDdiwchJozb3dXr98oagfVrFXwvx1679dQc
556dq69lNQR19k4yRbkixhOW9e/37Aeb+hr3JfVX9e2DORmvDiV7noP7q3rV
6xfmD6q2AH93PenHX5cagKviM+qnjCQmb6412uKSZubrI5q63GyrD5SG+Z5L
JKHQt0ke9tbbkL73133+wpFxTEFtXepse9ZmFEQ17RUJfSTXO2N6c1dfnq2j
ZwjrRGTv9qBynoiWllqpT8T3lWjhhevxf+lv5zvT6jmFdk1tj+IrsxOqRKSw
/IbeFetA8PkI2byMbNpkFjUUMhvQLmPdMk3BhggeH/X8KtpTPPdDtL8WpV4Z
Gyd610SNdmLsGo2xUPu1qf3ebPxMiKkSr4nnnYhrUXH7tJq7lZAptfgDytyn
tA1qVnfiatbkOdY9O1dfq/q3HHY9qYYv9ZzSHFu3vU2b+powN9mXyU7flffl
vMBe5xCvX6r8PSnrPGb6TLQjhNynR3lVt0/BBCC4VUT9VI93+ARU6xjVxzlq
WG+jGHuUeet3Xh7VelNc50xq+awNJDz+INt/XTfyGqal36eeZ53Bahy1+FNY
LoGwbRt3XWYX8O1pbR3CaySm3/utH9D3fu379L1f/x36p1etBcHnQvSNrvS9
UeRK8LpeqxrNru+SVuYTlTW72NfwGg7ZfJTjOmyu5kE2Txj3I/rlR2Q6Ltmm
wmxBw6lOKu3Vpg33ZvNnYWW+RJu75M41pucssd6BYJ+qjjg+cn9Avb5cdWzN
2ngds39Hu2dn62vVGItHxSTPtUkpanzcS0Ytp26PNm28N6LuKftuqRH3OYdQ
d2SgVWw/FuuX2gSV3ibkUOXnXWsjADfEt3+X+wZ+/G98umeBx7eXW4N9H5gN
/pHhVeVGrrez2Ib6Fk0sjNMjY/1dI76bGsZZDl9D0GiIHWy6vm3rPNbfEes2
xbUSsZjz645DBJ8Prj/uhhOyA9HeiulNHa2Nk/p8fZam6dn92huSYftr+x4b
z1qv5fekTFtyOndv0+Z7s+mz9Cz+bM2f/viik1e7JhYP1p9QZRgNrdU7qjci
y6+et7SXH8YauVc1lhznnp2zr1Hirc9d9kc0bTn3rm3adm94m3s0MezqGm07
nyMmo5g7nrxW5yXfXop1n5TqHALXiwNSrc8wlwnAB4j+Hv1U+Zz9e79KPzr3
9RyZnfTT2lxP236XS6t+yubBZGvDkUL9oIY1JtbeTRvWICznspp00fr18Rzu
1itreC9u01zXAfKfwOUSBx65fvtzFqWfL99d8vyG2NsCls/fm5DjZevmBJ3W
6UyigDzXJdfzKdrhxLu0KWPTvdl239KLWl2T61HYGoCcUBg2DQgJRY1/T6/d
z857nYPIMe7ZufvaKo4+bUd6nX7Lb1TdfZd+sO3exPl3rC19tuc5kihsfj7i
qPm78+/1dnqmAPj0fPL4vcP103XZ6pv0U7Y9G235s+31V/NPGzSMbLXM6yUx
hfXcqdbr214PCfoJgGtErBO+PqYAcDzQ1wAAZ+Kz1o8oOFw/1dfhu2x4Hakh
PbXUyVNmTXHx2/ST1vhdUi1mYOfr28O/B/0EwDUi5PM3jjkAHAv0NQDAmYB+
qqzzXdnvGvOfBjpFQg5yXROu5ybxOj+N83exXc1/qsV5a6azky+/yf/kbDku
eV/XbtBPAFw4Za5OfZ0iAI4N+hoA4FzcoH6qj7NsXQ1x23VtuDgg993NY5+P
ty3JC/b7Jbj/afUbxu96s+ZpqGv+VtRGbY5/iFl8RPvWI1mfb+w7TfGFkmbQ
1DDIaNpep6RKTTX79tRPF/L7VIF+Ap+RkBamTs9iPn1vQE9jhTYtRwfA/qCv
AQDOzA3qJ9GvFDpG4xpQTTXkmth5jdg9tzt5v/rpon4qFUajLszfMxMSQxPL
Y1vjxxOXpN4O190bU5u82Zafteu2r366lN+ndlXQT+ATEpIuDelxLNHkRSZF
UUnVNNI0k7aUigFgT9DXAABn5ub00xe6H45JVhSajOprQxU2+mz3uqeNtVOP
sN3vmQtb9z+VNK27lG9CXfOt+ikjdklpXKe3vo1p2SA9m36Hh9GYnsft29Pw
4/6nS/l9alcF/QQAAAAAcK3coH5q2x7GCtnNi4RsJI7j4297zqG16ac8v6ml
nkRZ13wn/VTgWho9bvFF3b2s10s/Z/7TJfw+VaCfAAAAAACulpvTTz0y7CUt
zCnpuk7Gq0kLx6Xgyhc0aNdPlK9pv14fY7U9v7ps/Yzd678m5NkmSS267Os3
o7W1h3fJQ6uD+nsAAAAAAODiuDn9NLyqunq7slE/UbZM+rSoU7TB/7Z3TFpC
C23c8F19smqlZFG/XAT6CQAAAADgark5/fQ57dVt+inDt+Q99VNIpjKmZ3Vz
rYSFsp5HpsyrOgf6SQT6CQAAAADgaoF++hCxO6XHwZCeRqPjbcMhTYzlYe3c
8hvaG/LB1vRTNC9qE26JtWP7tcfmnSt+71J+n1rLoJ8AAAAAAK4V6KcPcSn1
sfn6udt+w4j00a7+p4CUYn2N+03Xs7Ze73qMZFMdj21aKG7UT/v9eJfy+9Su
CvoJAAAAAOBaOZl+iimKzp9otG63r+fmfIQksElVFFJV9Xhb+n36zNvjKmLS
h0X7ejJtrb6eree0k35KyBTWzlVmzTeu7ie6k3apv/eFVGdzbwusydoxcss1
tDb1In6fOtBPAAAAAABXywn0UySuSduTaIuZfEJ8kvvrOuFJ+8jaPRdIMKOH
isbYYf0q31pbN7ipfoRb1OYrt8mrU90htOm5Us+8KS6v+Xd43JhXlfnJ1teb
uhsbdH5V/lGgnwAAAAAArpaj66eYjFp82IPasV5JfDIUqaIp1rb+iCaySm/e
9VrjiT8jeTxsrKt3NxiRJOu0qXnhvBrb1qSf4veG9WfTe6doOmnpPa6ee0BT
l/eg2JuR8rL5d8iuU9bnTBPF/nx1zKY1pnpDmijGxrZdNtBPAAAAAABXy9H1
U0Rqzdewf13sj16CvVk7Cds113OL7AZtU9mGa+sw1VkK/qXmnJ6Y7FeVnvrr
viBxe1am5NeW0Mpqpu+UTyT0u93zlbbXn7hcoJ8AAAAAAK4WUT9trT2wG54p
VWxd/R0G4uWSUOD75KdbsCVfLQ59Wjo2vVkWmeaUpuZq7eHwav1A5+Jb+us/
Vj4fP06/i8cDAAAAAOB6+Pbv8hisH/sbdCxvTOi55Ng2uQGMawCqfEu/+pOl
fvpJ+vvfnvt6AADgdvAdkxRpnK9HIcnGWuwEAJcG+uwFEv09+oulfvr3f5WO
WJoOANAI4vcAAKB7Ipq+9NfiwSfz643jB58d9NmL5QTxewCATUA/AQBAt0Rk
FOtxrGrUhmQpY7rrS7REmAzYm4jetAndl7Wuej16etFoeVRZgz570Xzy9XMB
uDygnwAAoEtYvdm+crQ8hX1Zvir0LJufYA2OWycgdfBlzSdU1u1aHKmDXUKf
BRuAfgKgY6CfAACgOxKaFvP4D6qzffeTEJLShy38GbDVQd6XJH1OYZxQHCxJ
FdarvJOsI5zlEvos2Aj0EwAdA/0EAACdETv0dPY1S4pxH3bWdRPP85prkunV
PvBpUsbyHUMjX0SfBRuBfgKgY6CfAACgKxJX5+PthuC5co2OhW3T0vMpiteL
nIWeQ/a7X3xxQPbcJnenRTwO109x4NJivqzF/cXkZdfqeNRaii2JyHOd9Ng5
Lf1NZ43J95ZpW+ZkO0vyw2j9O5OQnLStfnERoR9QEAQ3GIuYpPfKb7znjjrc
WktgoY7yfjh1N9+5s/XZcE5PqQ58eNklzjQm1077Vq3Odhx4eV9yww1FAnfs
m6d9Jj8I9BMAHQP9BAAApyawNXroD+hxIKz/3hvQw6BPD9KU2YeRNyd52LBG
fE/wIyQ+6dKA2UpBaDP/wNfeLrbTIfopIksdF9fTo7eobJfB7bZv+g1rycdk
GzJfm6bYVjUIqt+/0Nf3y/cV6rv5c50eSl+IE5Cjjdh+8I1wHG24xf9UxHBu
uG/n7rORrbD9N/2ykWvRc9GWO3nOzme8DHkcY/n3Crv1zW6eyQ8C/QRAx0A/
AQDAqXFNlSYvE3pkNdKGpGg6Ga8mOcWcua1Lhf0jkeV4FKR223Ox/708W31R
5JAk2HD3wxH/zp1tpz31U+yRItYoKGzyRenj6LW9Q3x23JM2I8+dCe0R7NnU
1pSKv0uaRV4QpPei1Gp9eiuM1KUxFuzXPj2NBxV7FvqpJCajyIF61Hi+kj+f
kqqZ5BXCZ6EMivu2+tHCd4tURadl8Rt23mfTfjbVNJrahX6J5iutnPa31SUF
ZOkqadaStcmzlJrWTvcMZkxLlNroQbFr92i3vtndM/lBoJ8A6BjoJwAA6IaE
9GFhY9XsOaYNehPi2SwhqcW8+sRa2ZS2nNrFA5nUsbAOT2rbLTyP3swpOf7x
4/cctZ9flyqtznk3lEkr1gFSs7n61M69X3uHxLzmgFLaoxFrD6tDEC/puWiH
mMfDfA/pefOWF7k+E00pzlUco9vkvc9oajk3GL/XgjctdMNQ+D1Cktl9G9Jb
qn9cY1TE5CVp/5O4r6bSN7vrs9FcZp8/KjNKEjf34eR9JdMoTJP0V+2Knbwv
SKxP9EjW1JXmGqn5ur4LedCgn3brm90+kx8E+gmAjoF+AgCATkg8ZgM+Gy7/
e2AxTaC/C7ZWOf+e2oVTr8i1iFefW8I6puwzkTgkL7XffN+vbp5Pgb8kOa+/
N0ltuyD/W3U/Lz1WyCdK4tSKTsiSxLVTB2QV53VLO3PA46xYvetvxoXtGdOC
xdqNqXQVvZXtGOoV/WMXvpG7scnye/KmC/fq62janm91ybT9Nlu2/JituTTp
O31Y6lExDi0hx5gIsWp9ei58VHcD0e4f05snnKPLPhvaNBHi5O5G4+Ic/Ypm
flZnrK+s+oRZicF7kK2iX7hMm4u+yZ365inad0qgnwDoGOgnAADohNTGKXN3
VGGwtaTemlbICGflfPyIlhVzzCe5jCF6mTWeKrL5XP6hm+KILwRPmP//Qgar
OSDUtmZz/Fn8WKlxDFo607wOQL6PpLH4MfJLu7dXszcD1r4nfUkigTVh9r8V
7HznL4qP/Tb9jTUclkXc492L2aItszoLJk1qa0ZJqklu0GAAdNhn2SlDl0xt
Um13XyLTdilqaJRvct9Z1t9Yz/SmzLZZCH7RXfrmKdt3EqCfAOgY6CcAAOiC
+F1jY22Z00PJkuWZl/FAK3yaFHFCXwda1R4KZ2xu3GiZ5058m3RNJ12vbwYZ
hkZPxXfLxpSMtX30/NiFGHckzMc/vwp+CHJZ7odS1nmIHaGmRBGP9aKRXatt
toof+8Jj9MqWW9x2Vp3qMWU81tX6nmjTb7N90/QptYWDRU7Rv4Zaa72FJPTp
7VVlvz/z2YzlXJ/Uv7rLPlt8OfnOjNSXUeX6sroVspZpvPXGMx9mTyJX+Grv
tfCLijU0dumbJ23fiYB+AqBjoJ/2IokpThKKY0Tag4+R9aEk70/nvhLQFTxu
iNt5CctVqc3vv3D77r5WOyyyVfY99ZV/diNejfupDbhr9wvKefea1uHXL9jX
LMbpC0mG3egzEP1WlRrbviXYtoNaPb+Q1OJ9Jb0e1vLPSuKbK/u9L1O9smGx
B70pQ+Hejkgt6ik+V7RKn3SnKdbt9H028WcVbfMoqyRlemUwZvX18u8eG4I+
DFaxqFmfqDgkEzKL/lW5lh365nmeyQ8C/QRAx0A/7ULs26TUaj1l82HKq42c
ZbAHWb1chR7E2kz53K9Cdhc5xuCsOGoxhgi5Ptzu4uOvXda1K+fAZ9VANVab
WohV2o/965eXtdrqsUksdqr8rkSo/ZDZn++1K0x8Ml/n6b4R00Is7i+cV30D
PZmC4jtzBN+BvmXNopuC1cqWajFlmU/KIFnL8oVCUspxZyDnWsjVh1Su6RTM
NaYZxDoRXfZZMa5xkvs4l/nvvbqegLRRmRslxDAyPVSP5/S4X1QwbHbpmz88
yzP5QaCfAOgY6KdthHNVeJ8PSTMt0mVhLB1qdKVh+KBTAlKHYsyITpapV+rc
qnP0pM8Lnw9/LGvPUWbfqswmNF2frEKnaNa0qJM8IGNm5raRnCe2x6we2oPw
Pfuxr37iWqdek8CUSh/ShJRxlnczz3VQOcf/qHJbPPLKGtFZ7gh/99y/WOR7
VlE3TSNTHRV/N9J/D/N1dvJya+/lOq7DjTlAN0W8ZHlp6tyjMMjqTBT1Jt6t
la4qYh3D9zmZls1+8zIWsoy7TIIlmeZMiA/suM8mAS1Mk2yvuMJwxuqXF1dI
y/R7LZv3Qabl6n5Rn/uQJqqS/rtYs2yHvmn/o3M8kx8E+gmAjoF+2ogQ01yP
rXaFeq/3StPafABwFjKvzSSJ+SPJUsjLH9ACS9h8UrgGUVvmw8tNz3J+PL3y
t7uxTkE2/iS83re4ruy+17Lf+k/cNtMqc/a8TWVM2FtmfCe87llup0oTksq6
av1Jsb4QrxfNtpGe/jUhYyj+vUe6vZpXYHX+WteEvTFij8WubdqqOTwl29fP
PXef5evntv/eTukXqtVv5D6y1fZU1uzboW+e55n8INBPAHQM9FM7Qnx+47gY
CO+uHk19JLKAZngdqGZbgNd0Wq/3BD4JLPasNs6K+ezZmjHlWjjCHL9iCjXo
fLOYzxmRdfCYs59+YjUEirgv8XvKmLAneUri5QSzug2atsOoxjuzmKdsTkGb
F/2e66r7sUpL9rBkvpDiXNnaQAe2/DMh1tlo34S8tBqOPqH7/ohMr8WZd+4+
m635NOjTo2y1xMRxv8/ErGYd8fXDRmTYVf24tW+e5Zn8IKJ+GkA/AXB6+Psv
0wALPHQc0ffUkhPK6vt8s55PCkDJm+B7em7MexfnRPut9g64XlhOer1uF61q
orluUNMEMXmu15DfnlAYfnSgLvXTrn6c9nOGnktey5pEq3aln/thi95JyE8/
92uNjEOPXH/9fEkc0tblj8DRuKw+23KNUdhcnyTtK256LW3dZVvfvJT27Qxb
w/pLHu+KVwgApyam3/utH9D3fu379L1f/x36p5jUY4hrStxJVuM+Yp2eevw1
ACt4HnMeT984P8nzDPK5eBM96bPhmytfwZO4BunZWPl47l4s+HFAK5fVZ8FG
kn9Cv5Xacd//te/RD37n9/FcA3ByIhYDndl28D+VVO3ZR60lJ1RYWzDz3zXb
xuCWqWjsb4bktEyIOkJ9pza9Dq6VLBYYvkVwTaDPXhXwPwHQMch/aias5Dar
rTcmrORPK7iBoEYlF3lDXHoo7of830+Bb5s0nS3Jf19p6Dt5tv0gAM4I+uyV
gvwnADoG+qmRil9pc30iTdBPzbkt4JYR/UqbdBHPTV7l27lwZV436RhyL4wh
WOcAXDzos9cL6u8B0DHQT42IY9Ee+klcdxCAjLp+au1JFf00QCzttZP4pI4H
dN8fkqzPYc+Aywd99nqBfgKgY6CfGqnopx4ZrWvdV/XTA/QTqFHRTxvWpq/r
JzyLAAAAdgL6CYCOgX5q5ED/E/QTqHNY/B78TycnCejNNMk81jZbtta8+pN/
+Sf0l/7iT2HrYPvhD3/YaTfal+F//d+c/R5h6377+cefO23Hgn4CoGOgnxqJ
Dst/aq3TB24WWxnsVD+iqp9GrXX6wJGI5kJdxONsbfVjoj/5E/rPf2aArYPt
R8GPOu5I+/FXf/EXz36PsHW/Pf/SL5+2Y0E/AdAx0E/NBCSL9fecVqu3op9Q
fw/UCWby/voJ77/TE7ukjEf0LEkkHWF7Ho1p+o5fDQBwBqCfAOgY6KdmYtKH
Ql29tvUDY6cS56e35kmBWyV+1wUfxbi1rt5SG+2UJwU+F75jkiKN6Wk0Ikk2
CEvIgQ8R+2TpSqrnR2mfksiwsRb3TQD9BEDHQD+14ercnr2X5807hTOh3mu7
bQxumGRJT0JeU9talG9yn/W3pza9Dj4REU1f+lSPAZzMsfIlOIzo3ajWH883
GWup3gLQTwB0DPRTG4ln8HdQT25cB6MSmzWetuaPg1smoemI2zPyrLEnkdzj
9R6nHnrS5yYiY9wr+kPmHwjJUsZ015doCccjOADm5+7LlPeod5Oe+z2SjOW5
Lw10AfQTAB0D/dROSIqQA7UemxeTIdjF7TUmwK0TzpVKbF5dHSWuEOOHteM/
Paw/9BX4BsAR4O8qGf7L2wT6CYCOgX7aROxogt2rV3JSKnktQx35KmADUSWf
Tn+v9CTSBR2uoQbBJyehaeF7elBRrxN8HB4rMSQbL6LbBPoJgI6BftqGLazf
cy/ptPR8Ws50Ic58iPsGthPOhVojA9JnS/K9JekSz4F5VLF+2Kcndlg+HHzW
4Bgsy1xd2M23C/QTAB0D/bQLy1elIS/3C92NFFrCBAK7EjqkjNZrBnz9pk/K
K/IUbgEeqznY6CuIQ5+Wjk0L287nbKJ4PScu9Byy34v6aklA9twmNzytAyIO
XFrMlzV/e0xedq2O154DmkTkuU567JyW/qYXTZzPK9jpfrazJD+M1r8zCclJ
2+oXFxH6AQVBcKMxAAnzbW9ev/1S72tMrp32iaDWowIvv1Y3bM8FjdJ9nPTY
he1u1AuX+iwdFegnADoG+mlnsvf/u7N6/9gOeQFuFjiM1Xs/fZ+n72jn3aMI
5SI+PYGt0UN/QI+DnlCXZkAPgz49SFNmo0benORhb11j94RcqcQnXRowWykI
bV7jsXcq2ykiSx2zGidvUdkuQ/Cr9mmxdvKYbENeW6t4VTej+v0LfX2/ek6P
P9fZ2uaKE5Aj1P2/LX9eQNp4SA/DQeWeZf99n/Yrg+XrXu59jVyLnou8rbuy
xm3at40XHvNx11D7NvYbnpG+Qms96mKfpRMA/QRAx0A/AQDAqXFNlSYvE3os
6yz2hqRoOhmvJjnF3LutS4X9I5HleBSk9t9zsf+9PFt9UeSQJNiC98MR/85T
2U6xR8qgaqtm9ueijG3utb1DfHbckzYjz50J7RHs4tRmlYq/S5pFXhCk96LU
an1W839pjAU7uE9P40HFLr4p/RS7pKb9aTLmWuNBUkg3DDJnhX/wgu+rZymV
c8jzKCtoyzRAqffqPjV/Vh43pjfXozem8wYV7X6xz9KpgH4CoGNE/fQz0E8A
AHAyeKzVfc0uZDZsb0Ie+2tIajE/P7FWs+u23KOvA5nUsRAHmtqICy+1Jc0p
Of7xY44ctZ9fl1rk6t0NZdKKtavUzI8UzYv4ZlE/xbxOhlJqpYi1h9XOiJf0
XLRDMnnLI1th9yNveTzPbeqJVo2llnSbvPcZTS3nNuP3XI3ph0o86CXf19jJ
zyWxc/ZI1tSV/2uk5mtIL+TBmn4S62QsCkkXl+0R2n/Jz9LJEPXTd/836CcA
Ts4/p//2azlmfqX/45+f+3oAAOCTknjMH/AsrpEcWMx2rdRmTHXJQ2FfsjXB
4tXnlrD2btt6YaHvkef55Pv7bKtjKpZjEqfKLyFLEnP3BmQV53VLe3Wgsrgo
XrN/XNiwMS2Yr2BMpUvjrWxHrYaprazs57uxyfJ08qYL9+rrCGvuea8Su6fi
+u0nua9xmPYNb8/+5K+OqeUSrc5pVmMPZas4r8u0H/d98RrtT0bRo/wZi7V7
0gs9fqJn6eL50d+if7e8l3/+v6R/fO7rAeDT8y394Dvl+PUdevv23NcDAACf
lNhmOSaq4Oy3pN6aTZsRsvW5R7SsmHU+W2/5/mXWcrKQZME23Xe7X6utzrVf
tvH8GqEeO/MVCGvjjQxaOlN66pUxZhp55aF+aT/X14zm60k/6dW6KoE1YXFm
VtNS1DeGow6YdmU96kT3NbLlg/tT9r31eim+KfHP037CepQ3XYvJS1y+nr1u
L8lUeNyeNuNeptM8S1dA/Eb/cXkvv/MDgikHwKlB/hMAAHRB/M5jrcrcE0qW
bA69jCta4dOkXL97oFXjccIZm2M3WufLY7JfddL1QzaNpvNaNr4wr//8KvjO
yGU5JEpZjyB2hJoSq+3xRSO7VnfPNUbVWLKy5cyWT3WmUz2mjOuC7ymDrysn
5pOd6r4mvk26dlif0vQp1cPhmI+sJ1V8Z95r4c8U1pdeasOqHusNSTPt6nNx
smfpCkD+EwAdA/0EAABdwGPauL2YzbWXMUwVn9SL4Auq1SCLbJV9j0fdEJTz
9zWbnF+/oAlZrNQXkgy7pb4k91tVfSeWYCcPavX8QlKL95X02lXLL5mAxbRx
TXst9zUgubh2qeLwSsgsrl/s92Xc4df+ZE2HsyOv5Fk6CdBPAHQM9BMAAHQB
i7USclK4/cbHX3HN7nwufVYNqHLKuXgh5unULAr7tR7jxGKwSpstEWoUZHbs
e+0KE5/M13m6b8Rsdhb3V1ljOtNqMgXFd+YIfi3dvaLc/lMhxINq77xe+VXc
V6ax6/GCHvdnMoOE137I/Ef1K/TnJr250dU8SycB+gmAjoF+AgCA08Pn1R+F
3KLIKW2+PpmuT1ahUzRrWtRbHpAxM3PbSM5z6WO+XupajtKp4Da5ZFa8T2RK
pa9jQsr4C929zHN7vbTrH1VePy3yyvrlWQ4Kf/fcv1jke1ZRf00jUx0VfzfS
fw/z9XqyV1P8Xq49PNy49vCtwP0tQ3LY/biO+8q0Tt2f6XMf0kRV0n+v1hor
9btYey9r65u2ivV71N0reZZOBPQTAB0D/QQAAKeHaxAxtkj01bD8+Cw3xdMr
f7sb6xRk/oKE16UW1z89KYJtplX8SbxNZW7+W5bkkvD6abltK01IKtcx7U9o
GRXH9qvt/jrS078mZAzFv/dIt1c+A1bnT8iLuWWYBhHj9K7kvjqlX6hWH5D7
kFbbkzrLP2c5UbnmGtLkZcx11uuyOPYKnqVTAf0EQMdAPwEAwMlhMVK1cVas
tZCtPVMk2Ytz6Yop1ErzzcKGHJHld5PvzupeDORKnn/2/lDKem7ylMTLCWZ1
WzZth2FXbGVHqAkgafMinIzb//djlZbMrM38d8W5lBlqRxCvqfCgVtcSu/z7
yv0+E7OadcTXpxqRYVdrQFTWcM7aMVLIFotSXMGzdDKgnwDoGOgnAAA4NSzW
ql7/K/ss9Ml1g5rtGpPneg21FxIKw64H6vZzhp5LXtgc9LVqV/q5H7bY5Qn5
6ed+rZFx6JHbUCMgiUNqOdUNwutE1GvpXcN9TaKwua5Iei1u2u9behT5aX/L
Pg+bi5JcwbN0IqCfAOgY6CcAADg1vrmqHf0krpsLwMH4NMl9f+OaTxDcJNBP
AHQM9BMAAJyWzFewih96u/I0C3AhFGvM1utxgxsF+gmAjoF+AgCAU+DbJk1n
S/LfV7F7d/Js+0EAtBF7ZBomLX2fzJce9DjgQD8B0DHQTwAAcHRSe+ZerJ8w
1CjYfhQArThKv1I/QbXRo0AB9BMAHQP9BAAARyfxSR0P6L4/JFmfw54BH8af
qfTQ79PjSKY3Dz0KCEA/AdAx0E8AAAAAAFcL9BMAHQP9BAAAAABwtUA/AdAx
0E8AAAAAAFcL9BMAHQP9BAAAAABwtUA/AdAx0E8AAAAAAFcL9BMAHQP9BAAA
AABwtUA/AdAx0E8AAAAAAFcL9BMAHQP9BAAAAABwtUA/AdAx0E8AAAAAAFcL
9BMAHQP9BAAAAABwtUA/AdAx0E8AAAAAAFcL9BMAHQP9BAAAAABwtUA/AdAx
0E8AAAAAAFcL9BMAHQP9BAAAAABwtUA/AdAx0E8AAAAAAFcL9BMAHQP9BAAA
AABwtUA/AdAx0E8AAAAAAFcL9BMAHQP9tBdJTHGSUBzH574ScOVkfSjJ+9O5
rwQAAE4LxrsTA/0EQMdAP+1C7NukjAfFfSq23oCUV5ugpMDuxGQbCj30vlT6
0sNYIdtHTwKXQky+a5OhTug+7Z/Pr+65LwhcJRjvOgP6CYCOgX7aRjhXBc00
JM20SJeH/G9DjYJzXyS4AgJSh9yGeHzRyTJ1ehRsC3WOngTOR+CYNBkP6e6b
qr17r9jnvjRwdWC86xToJwA6BvppI+Esn39daSeJXCH2wDUkwb6Yn+8awVWw
kPusv0jifH6yJKnHn8FFeL5rBLfNUpforj+gh0G/6i+AfgJ7gvGuY6CfAOgY
6Kd2EpqOe+wdIM/rA31Acr+8dz2a+gjsBs0k3pTbo32F6j0pnMns87uxSehJ
4NzY6gD6CRwExrszAP0EQMdAP7Ui+p6+kchr2MV7HXMflAwfFGjmTZiLfX5t
6kkuPbO+1qc3zMmCM+OoQ+gncBAY784A9BMAHQP91IZv8vi8O8lq3CebZ2O5
Ar0J+R1fI7gGPJIEW8Fs9FMmZAq+TslETwLnBfoJHAbGu7MA/QRAx0A/NVMd
3x81p3m3dMx6YO+KXsu7AtwyFY39zZCclrJTor3aptcB6AroJ3AIGO/OBPQT
AB0D/dRMSCrLbfpCauuNSfcb8P0U3EBQI7IVngswaH+vheJ+eP+BMwP9BA4B
492ZgH4CoGOgnxqp+JUyXdQWoC3ev7ZYb3DLiHbopvda5Ah18r+p1noEoGug
n8AhYLw7E9BPAHQM9FMj4li0h37COimgTt2eaO1JFXtiQAs8i+CMQD+BQ8B4
dyagnwDoGOinRir6qUeG27ZWelU/wc4AdSr2xMig1p5UsyfwLIJzAv0EDgHj
3ZmAfgKgY6CfGjnQ/wQ7A9Q5LJ4F87GAE7zPyDTNo23LYHuwFPQTOASMd2cC
+gmAjoF+aiQ6LP+ptU4fuFlsha9DuimfumpPjFrrVoHbw5Z7Qt84wtbbbl9B
P4FDwHh3JqCfAOgY6KdmApLF+ntO61ugop9Qfw/UCWby/vYE3n9AwH1V6Gk8
JkmSPr6l3/MsT6GfwEnAeHcmoJ8A6Bjop2Zi0odcFz0bbstuTiXOT2/NkwK3
SvyuC/Os49Y6U0tttFPeAABdAP0EDgHj3ZmAfgKgY6Cf2nB1Pr7fy/PmncIZ
3e/wrgA3TLKkJyHO/60lFPRN7rP+9tSm1wHoCOgncBAY784D9BMAHQP91Ebi
GUK+gExBwz6VWIXxlCCfwDoJTUfcRynPGnsSyb1ynx5NPfQkcF6gn8BhYLw7
C9BPAHQM9FM7ISlCDtR6bF5MhvCeaK8xAW6dcK5UYlXq1kLiCjEvG3IGAOgK
6CdwKBjvzgD0EwAdA/20idjRhPeAXonRrsR5D3XEb4MNRJV8Ov290pNIF3S4
9o6HEJwfR+V11LAuONgPjHedA/0E/v/27hC3jSAKA/BRWqmHiHKC9AA5gEuD
C03LwoaVGS03KwnZgDUZsiALTJYYBJgYGrxGIV6nqbK23LGafJ/0uL1aPc1v
z5uhMPnpLXnwO+zXaRVdv4qurgZzTxPPjbetm8FZI9dR1V2s+i6q6W4O4NtP
61TOZ7NaRm7qqNI0LvfOPL+I76mK+ybHcqXZMYJ+V5b8BIXJT2N08zTIS7u6
vEnR2bbHWOs20s3VH+/Rl09XkebduT8dH1xXTV55N1/0vL+dpQMv6XflyE9Q
mPw02nYT/UMbuWki5zb6Rw+L42we+2hzjkWTo33oY2N8Gnin9LsC5CcobJif
Ju4ABwD4n2xb+QmKGuanz/Fj3jz/v7IYU3UdeWnzGgDAqayXOe7rkWuxJsfi
brabMZCfoID9/HRo2QsPAHA6Ob02Nzay5CcoYP+Oo0PLubYAAKeT0/Xx+eki
hZ1B8K9to/s1i9uUIh1ct1Hd9ef+AgAA70ZfV0euy55qVruPEgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPpDf9NWdlQ==
     "], {{0, 241}, {848, 0}}, {
     0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVlgdUU1kax+976Y0WiICU0JsgnQBSQg+gIB1shCSEUEJIAUFsyOAIjgUV
ESwDOgqi4FgAGQtiwYII9j5BBgVlHSzYUNkXWMLO7tnds985995fvnzvf7/7
knvO3yglOyoVBgBI8MgUxc5jisXs/Gg15EOsUCLgC3lcllDK4/PEjBQISfaQ
kQmQe9giUSaMVGUJpeKoYD96QmISHScHJIAFeKAGTNgciYgZGRmuqJ5a/xof
7gKFILhlq9D69+//a6hzeRIOAFAkwilcCScL4ePIaOaIxFIAUAo9kzypSMGb
ENYUIw0ivE/B/EluVXDKJHdN1MRE+SMsBwBPZrPFfABIw0iensvhIzpkxcnt
hVyBEOE5CHtz0thchAsRnpWVla3gOoQtU/5Jh/8XzRSlJpvNV/LkWSYCHyCQ
iDLZ+f/n6/jfkZUpm9rDGBnkNHFIFLKqIO+sLiM7TMnClHkRUyzgTtRPcJos
JHaKORL/pCnmsgPCpliWEcucYrZ4+lmBlBUzxeLsKKW+MHNeuFKfx1IyTxIY
PcWpgiDWFBekxcRPca4gbt4USzKiw6Zr/JV5sSxK2XOqOEh5xizJdG8c9vRe
0rSYkOkeEpT9cHkBgcq8MFZZL5L6KTVFmZHT/WcGK/OS3Gjls1LkDzbF6ezQ
yGmdSOX7AdHAETgDv4nZHgApb6lU0ax/tihfLOCnSelM5Lbw6Cwhx24W3dHe
wRUAxd2b/Gnf0SbuFES7Op3j+wLgcgUAOGY6x30GwMkHyJY+0zlr5P6oLQKg
o4ojE+dO5tCKCQOIQBVoAh1gAEyAJbBFenMFnsAXBIJQEAFiQCJYDDggDWQB
McgDhWA1KAFlYBPYBqrAHrAX1IHD4ChoAafAOXAJXAM94A54BORgALwCI+AD
GIMgCAdRICqkAxlCZpAN5AgxIG8oEAqHoqBEKBniQ0JIBhVCa6AyqByqgmqg
euhX6CR0DroC9UIPoD5oCHoLfYFRMBnWhPVhc3g2zICZcBgcAy+C+XAOXAAX
wxvgSrgWPgQ3w+fga/AdWA6/gkdRAEVC0VBGKFsUA+WPikAloVJRYtQKVCmq
AlWLakS1oTpRt1By1DDqMxqLpqLpaFu0JzoEHYvmoHPQK9Dr0VXoOnQz+gL6
FroPPYL+jqFg9DA2GA8MC5OA4WPyMCWYCsx+zAnMRcwdzADmAxaLpWEtsG7Y
EGwiNh27DLseuwvbhG3H9mL7saM4HE4HZ4PzwkXg2DgprgS3A3cIdxZ3EzeA
+4Qn4Q3xjvggfBJeiC/CV+AP4s/gb+Jf4McIagQzggchgsAl5BM2EvYR2gg3
CAOEMaI60YLoRYwhphNXEyuJjcSLxMfEdyQSyZjkTppPEpBWkSpJR0iXSX2k
z2QNsjXZn7yQLCNvIB8gt5MfkN9RKBRzii8liSKlbKDUU85TnlI+qVBV7FRY
KlyVlSrVKs0qN1VeqxJUzVSZqotVC1QrVI+p3lAdViOomav5q7HVVqhVq51U
u6c2qk5Vd1CPUM9SX69+UP2K+qAGTsNcI1CDq1GssVfjvEY/FUU1ofpTOdQ1
1H3Ui9QBTaymhSZLM12zTPOwZrfmiJaGlrNWnNZSrWqt01pyGopmTmPRMmkb
aUdpd2lfZujPYM7gzVg3o3HGzRkftWdq+2rztEu1m7TvaH/RoesE6mTobNZp
0Xmii9a11p2vm6e7W/ei7vBMzZmeMzkzS2cenflQD9az1ovSW6a3V69Lb1Tf
QD9YX6S/Q/+8/rABzcDXIN1gq8EZgyFDqqG3ocBwq+FZw5d0LTqTnkmvpF+g
jxjpGYUYyYxqjLqNxowtjGONi4ybjJ+YEE0YJqkmW006TEZMDU3nmhaaNpg+
NCOYMczSzLabdZp9NLcwjzdfa95iPmihbcGyKLBosHhsSbH0scyxrLW8bYW1
YlhlWO2y6rGGrV2s06yrrW/YwDauNgKbXTa9szCz3GcJZ9XOumdLtmXa5to2
2PbZ0ezC7YrsWuxezzadnTR78+zO2d/tXewz7ffZP3LQcAh1KHJoc3jraO3I
cax2vO1EcQpyWunU6vTG2caZ57zb+b4L1WWuy1qXDpdvrm6uYtdG1yE3U7dk
t51u9xiajEjGesZld4y7n/tK91Punz1cPaQeRz3+9LT1zPA86Dk4x2IOb86+
Of1exl5srxovuTfdO9n7Z2+5j5EP26fW55mviS/Xd7/vC6YVM515iPnaz95P
7HfC76O/h/9y//YAVEBwQGlAd6BGYGxgVeDTIOMgflBD0EiwS/Cy4PYQTEhY
yOaQeyx9FodVzxoJdQtdHnohjBwWHVYV9izcOlwc3jYXnhs6d8vcx/PM5gnn
tUSACFbElognkRaROZG/zcfOj5xfPf95lENUYVRnNDV6SfTB6A8xfjEbYx7F
WsbKYjviVOMWxtXHfYwPiC+PlyfMTliecC1RN1GQ2JqES4pL2p80uiBwwbYF
AwtdFpYsvLvIYtHSRVcW6y7OXHx6ieoS9pJjyZjk+OSDyV/ZEexa9mgKK2Vn
ygjHn7Od84rry93KHeJ58cp5L1K9UstTB/le/C38oTSftIq0YYG/oErwJj0k
fU/6x4yIjAMZ45nxmU1Z+KzkrJNCDWGG8EK2QfbS7F6RjahEJM/xyNmWMyIO
E++XQJJFklapJmJyumSWsh9kfbneudW5n/Li8o4tVV8qXNqVb52/Lv9FQVDB
L8vQyzjLOgqNClcX9i1nLq9ZAa1IWdGx0mRl8cqBVcGr6lYTV2esvl5kX1Re
9H5N/Jq2Yv3iVcX9PwT/0FCiUiIuubfWc+2eH9E/Cn7sXue0bse676Xc0qtl
9mUVZV/Xc9Zf/cnhp8qfxjekbuje6Lpx9ybsJuGmu5t9NteVq5cXlPdvmbul
eSt9a+nW99uWbLtS4VyxZztxu2y7vDK8snWH6Y5NO75WpVXdqfarbtqpt3Pd
zo+7uLtu7vbd3bhHf0/Zni8/C36+XxNc01xrXluxF7s3d+/zfXH7On9h/FK/
X3d/2f5vB4QH5HVRdRfq3errD+od3NgAN8gahg4tPNRzOOBwa6NtY00Trans
CDgiO/Ly1+Rf7x4NO9pxjHGs8bjZ8Z0nqCdKm6Hm/OaRlrQWeWtia+/J0JMd
bZ5tJ36z++3AKaNT1ae1Tm88QzxTfGb8bMHZ0XZR+/A5/rn+jiUdj84nnL99
Yf6F7othFy9fCrp0vpPZefay1+VTVzyunLzKuNpyzfVac5dL14nrLtdPdLt2
N99wu9Ha497T1jun98xNn5vnbgXcunSbdfvanXl3eu/G3r1/b+E9+X3u/cEH
mQ/ePMx9OPZo1WPM49Inak8qnuo9rf3d6vcmuav8dF9AX9ez6GeP+jn9r/6Q
/PF1oPg55XnFC8MX9YOOg6eGgoZ6Xi54OfBK9GpsuORv6n/b+dry9fE/ff/s
GkkYGXgjfjP+dv07nXcH3ju/7xiNHH36IevD2MfSTzqf6j4zPnd+if/yYizv
K+5r5Terb23fw74/Hs8aHxexxewJK4BCBpyaCsDbAwBQEgGg9gBAVJn0xhMB
Tfr5CQL/iSf980QgzkVhx+NWARDZDkANwpbIqoqsCmsU4wtgJyfl+EdIUp0c
J7XIiMPEfBoff6cPAK4NgG/i8fGxXePj3xBRFOJt2nMmPbkiwm0Raz2YFOfn
eD0kB/xr/B0nNA9Q
       "], "RGB", "XYZ"], Interleaving -> True, 
     MetaInformation -> 
     Association[
      "Comments" -> 
       Association[
        "XML:com.adobe.xmp" -> 
         "<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=XMP Core 5.4.0> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#><rdf:Description \
rdf:about=xmlns:exif=http://ns.adobe.com/exif/1.0/> \
<exif:PixelXDimension>946</exif:PixelXDimension> \
<exif:PixelYDimension>248</exif:PixelYDimension></rdf:Description> \
</rdf:RDF></x:xmpmeta>"]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{604.3671875, Automatic},
   ImageSizeRaw->{848, 241},
   PlotRange->{{0, 848}, {0, 241}}]}]], "Input",
 CellChangeTimes->{{3.6875125805168867`*^9, 3.6875125964149923`*^9}}],

Cell[BoxData[
 RowBox[{"p", " ", "=", 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "2"}], ")"}], "/", "4"}], ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "2"}], ")"}], "/", "4"}], ",", " ", "0", ",", " ", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"12", "/", "8"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"-", "40"}], "/", "8"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", 
       RowBox[{"-", "1"}], ",", " ", "0"}], "}"}]}], "}"}], "]"}]}]], "Code",
 CellChangeTimes->{
  3.68448164930337*^9, {3.6874826143718033`*^9, 3.687482615499119*^9}, {
   3.687483001758216*^9, 3.687483088063755*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "0", "0", "0"},
      {"0", "1", "0", "0"},
      {"0", "0", 
       RowBox[{"-", 
        FractionBox["3", "2"]}], 
       RowBox[{"-", "5"}]},
      {"0", "0", 
       RowBox[{"-", "1"}], "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]],
  FontSize->16,
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{3.687511728445561*^9}],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", "0", "0", "0"},
         {"0", "1", "0", "0"},
         {"0", "0", 
          RowBox[{"-", 
           FractionBox["3", "2"]}], 
          RowBox[{"-", "5"}]},
         {"0", "0", 
          RowBox[{"-", "1"}], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]], ".", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "4"}], ",", "1"}], "}"}]}], ")"}], "/", "4"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.684481677456032*^9, 3.68448171296975*^9}, {
  3.687483129867249*^9, 3.687483149042158*^9}, {3.687510816660735*^9, 
  3.6875108487974987`*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{"-", 
         FractionBox["3", "4"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "4"]}]},
       {
        FractionBox["1", "4"]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]],
  FontSize->16,
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{3.6875117203974247`*^9}],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", "0", "0", "0"},
         {"0", "1", "0", "0"},
         {"0", "0", 
          RowBox[{"-", 
           FractionBox["3", "2"]}], 
          RowBox[{"-", "5"}]},
         {"0", "0", 
          RowBox[{"-", "1"}], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]], ".", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "4"}], ",", "1"}], "}"}]}], ")"}], "/", "4"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.684481698904958*^9, 3.684481716769524*^9}, 
   3.68448175254078*^9, {3.687483182860505*^9, 3.687483194629734*^9}, {
   3.6875107571870623`*^9, 3.687510781971366*^9}, {3.687510854470128*^9, 
   3.6875108632459*^9}, {3.687511595395535*^9, 3.687511595720619*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        FractionBox["3", "4"]},
       {
        RowBox[{"-", 
         FractionBox["1", "4"]}]},
       {
        FractionBox["1", "4"]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]],
  FontSize->16,
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{3.687511698884768*^9}],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", "0", "0", "0"},
         {"0", "1", "0", "0"},
         {"0", "0", 
          RowBox[{"-", 
           FractionBox["3", "2"]}], 
          RowBox[{"-", "5"}]},
         {"0", "0", 
          RowBox[{"-", "1"}], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]], ".", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", 
       RowBox[{"-", "4"}], ",", "1"}], "}"}]}], ")"}], "/", "4"}], 
  "]"}]], "Code",
 CellChangeTimes->{
  3.684481775100037*^9, {3.687483227069166*^9, 3.687483232877248*^9}, {
   3.687510795267992*^9, 3.687510803483591*^9}, {3.687510870518567*^9, 
   3.687510918303995*^9}, {3.687510965466276*^9, 3.687510970897975*^9}, {
   3.6875116260822897`*^9, 3.6875116361624823`*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        FractionBox["3", "4"]},
       {
        FractionBox["1", "4"]},
       {
        FractionBox["1", "4"]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]],
  FontSize->16,
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{3.687511696084879*^9}],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", "0", "0", "0"},
         {"0", "1", "0", "0"},
         {"0", "0", 
          RowBox[{"-", 
           FractionBox["3", "2"]}], 
          RowBox[{"-", "5"}]},
         {"0", "0", 
          RowBox[{"-", "1"}], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]], ".", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", "1", ",", 
       RowBox[{"-", "4"}], ",", "1"}], "}"}]}], ")"}], "/", "4"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.687483400465746*^9, 3.687483407781855*^9}, {
  3.687510937329221*^9, 3.687510946617189*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{"-", 
         FractionBox["3", "4"]}]},
       {
        FractionBox["1", "4"]},
       {
        FractionBox["1", "4"]},
       {"1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]],
  FontSize->16,
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{{3.687511690358614*^9, 3.687511690607772*^9}}],

Cell["\<\

This result does make sense since it both produces homogenized points which \
line within the CVV.\
\>", "Text",
 CellChangeTimes->{{3.687511030190133*^9, 3.68751104162787*^9}}]
},
WindowSize->{1315, 834},
WindowMargins->{{1652, Automatic}, {144, Automatic}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 325, 5, 114, "Text"],
Cell[886, 27, 977, 14, 77, "Text"],
Cell[1866, 43, 41766, 693, 211, "Input"],
Cell[43635, 738, 818, 20, 52, "Code"],
Cell[44456, 760, 858, 26, 118, InheritFromParent],
Cell[45317, 788, 1361, 37, 140, "Code"],
Cell[46681, 827, 896, 30, 136, InheritFromParent],
Cell[47580, 859, 1370, 36, 126, "Code"],
Cell[48953, 897, 871, 29, 136, InheritFromParent],
Cell[49827, 928, 1366, 34, 124, "Code"],
Cell[51196, 964, 846, 28, 136, InheritFromParent],
Cell[52045, 994, 1323, 35, 126, "Code"],
Cell[53371, 1031, 873, 29, 136, InheritFromParent],
Cell[54247, 1062, 190, 4, 30, "Text"],
Cell[54440, 1068, 617, 12, 77, "Text"],
Cell[55060, 1082, 36817, 613, 189, "Input"],
Cell[91880, 1697, 972, 29, 52, "Code"],
Cell[92855, 1728, 865, 27, 105, "Input"],
Cell[93723, 1757, 1270, 37, 106, "Code"],
Cell[94996, 1796, 898, 30, 125, "Input"],
Cell[95897, 1828, 1365, 37, 106, "Code"],
Cell[97265, 1867, 871, 29, 125, "Input"],
Cell[98139, 1898, 1350, 37, 106, "Code"],
Cell[99492, 1937, 846, 28, 125, "Input"],
Cell[100341, 1967, 1197, 35, 106, "Code"],
Cell[101541, 2004, 895, 29, 125, "Input"],
Cell[102439, 2035, 188, 5, 49, "Text"]
}
]
*)

